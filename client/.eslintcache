[{"F:\\e-com-new-project-main\\client\\src\\index.js":"1","F:\\e-com-new-project-main\\client\\src\\App.js":"2","F:\\e-com-new-project-main\\client\\src\\reportWebVitals.js":"3","F:\\e-com-new-project-main\\client\\src\\Component\\Admin\\Admin.js":"4","F:\\e-com-new-project-main\\client\\src\\Component\\User\\Adminlogin.js":"5","F:\\e-com-new-project-main\\client\\src\\Component\\User\\User.js":"6","F:\\e-com-new-project-main\\client\\src\\Component\\User\\Url.js":"7","F:\\e-com-new-project-main\\client\\src\\Component\\Admin\\Uploadproduct.js":"8","F:\\e-com-new-project-main\\client\\src\\Component\\Admin\\Menumanage.js":"9","F:\\e-com-new-project-main\\client\\src\\Component\\User\\Home.js":"10","F:\\e-com-new-project-main\\client\\src\\Component\\User\\ProductDetailsPage.js":"11","F:\\e-com-new-project-main\\client\\src\\Component\\User\\Userlogin.js":"12","F:\\e-com-new-project-main\\client\\src\\Component\\User\\Userregister.js":"13","F:\\e-com-new-project-main\\client\\src\\Component\\User\\Header.js":"14","F:\\e-com-new-project-main\\client\\src\\Component\\User\\WishlistPage\\WishlistPage.js":"15","F:\\e-com-new-project-main\\client\\src\\Component\\User\\CartPage.js\\CartPage.js":"16","F:\\e-com-new-project-main\\client\\src\\Component\\User\\Pages\\CheckoutPage.js":"17","F:\\e-com-new-project-main\\client\\src\\Component\\User\\TopHeading.js":"18","F:\\e-com-new-project-main\\client\\src\\Component\\User\\ProductShow.js":"19","F:\\e-com-new-project-main\\client\\src\\Component\\User\\ShowCase.js":"20","F:\\e-com-new-project-main\\client\\src\\Component\\User\\Product.js":"21","F:\\e-com-new-project-main\\client\\src\\Component\\User\\MainSlider.js":"22","F:\\e-com-new-project-main\\client\\src\\Component\\User\\Pages\\OrderPage.js":"23","F:\\e-com-new-project-main\\client\\src\\Component\\User\\Pages\\InvoicePage.js":"24","F:\\e-com-new-project-main\\client\\src\\Component\\User\\Pages\\InvoiceLayout.js":"25","F:\\e-com-new-project-main\\client\\src\\Component\\Admin\\Page\\ProductManage.js":"26","F:\\e-com-new-project-main\\client\\src\\Component\\Admin\\Page\\OrderManage.js":"27","F:\\e-com-new-project-main\\client\\src\\Component\\Admin\\Layout.js":"28","F:\\e-com-new-project-main\\client\\src\\Component\\Admin\\Page\\UserManage.js":"29"},{"size":502,"mtime":1614199982000,"results":"30","hashOfConfig":"31"},{"size":908,"mtime":1618715146894,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":1614199982000,"results":"33","hashOfConfig":"31"},{"size":1163,"mtime":1618756152220,"results":"34","hashOfConfig":"31"},{"size":2938,"mtime":1617635748548,"results":"35","hashOfConfig":"31"},{"size":7070,"mtime":1618543040981,"results":"36","hashOfConfig":"31"},{"size":59,"mtime":1614199982000,"results":"37","hashOfConfig":"31"},{"size":16432,"mtime":1618756849464,"results":"38","hashOfConfig":"31"},{"size":16779,"mtime":1618756598481,"results":"39","hashOfConfig":"31"},{"size":571,"mtime":1617902946690,"results":"40","hashOfConfig":"31"},{"size":2397,"mtime":1614199982000,"results":"41","hashOfConfig":"31"},{"size":2828,"mtime":1617635588176,"results":"42","hashOfConfig":"31"},{"size":7418,"mtime":1614199982000,"results":"43","hashOfConfig":"31"},{"size":2582,"mtime":1618714038448,"results":"44","hashOfConfig":"31"},{"size":2178,"mtime":1617980645952,"results":"45","hashOfConfig":"31"},{"size":5208,"mtime":1618459219892,"results":"46","hashOfConfig":"31"},{"size":4769,"mtime":1618324860721,"results":"47","hashOfConfig":"31"},{"size":231,"mtime":1614199982000,"results":"48","hashOfConfig":"31"},{"size":3460,"mtime":1618751372904,"results":"49","hashOfConfig":"31"},{"size":3653,"mtime":1618751549340,"results":"50","hashOfConfig":"31"},{"size":258,"mtime":1614199982000,"results":"51","hashOfConfig":"31"},{"size":2558,"mtime":1614199982000,"results":"52","hashOfConfig":"31"},{"size":3887,"mtime":1618543123630,"results":"53","hashOfConfig":"31"},{"size":651,"mtime":1618629964507,"results":"54","hashOfConfig":"31"},{"size":588,"mtime":1618629929367,"results":"55","hashOfConfig":"31"},{"size":4798,"mtime":1618802805350,"results":"56","hashOfConfig":"31"},{"size":2052,"mtime":1618765718245,"results":"57","hashOfConfig":"31"},{"size":1243,"mtime":1618757001928,"results":"58","hashOfConfig":"31"},{"size":1508,"mtime":1618797217171,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"uhcds6",{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"62"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"F:\\e-com-new-project-main\\client\\src\\index.js",[],["136","137"],"F:\\e-com-new-project-main\\client\\src\\App.js",["138"],"import React, { Component } from \"react\";\nimport { Switch, BrowserRouter, Router, Route } from \"react-router-dom\";\nimport Admin from \"./Component/Admin/Admin\";\nimport User from \"./Component/User/User\";\nimport Adminlogin from \"./Component/User/Adminlogin\";\nimport axios from \"axios\";\nimport URL from \"./Component/User/Url\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menus: []\n    }\n  }\n  getmenus = () => {\n    axios.get(`${URL}/getmenus`).then((data) => {\n      this.setState({menus:data.data})\n    })\n  };\n  componentDidMount() {\n    this.getmenus()\n  }\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/admindashboard\" component={Admin} />\n          <Route path=\"/admin\" component={Adminlogin} />\n          <Route path=\"/\" component={User} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n","F:\\e-com-new-project-main\\client\\src\\reportWebVitals.js",[],"F:\\e-com-new-project-main\\client\\src\\Component\\Admin\\Admin.js",["139"],"import React, { Component } from \"react\";\nimport Uploadproduct from \"./Uploadproduct\";\nimport { Switch, BrowserRouter, Router, Route } from \"react-router-dom\";\nimport Menumanage from \"./Menumanage\";\nimport ProductManage from \"./Page/ProductManage\";\nimport OrderManage from \"./Page/OrderManage\";\nimport UserManage from \"./Page/UserManage\";\nexport default class Admin extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route\n            exact\n            path=\"/admindashboard/uploadproduct\"\n            component={Uploadproduct}\n          />\n          <Route\n            exact\n            path=\"/admindashboard/menumange\"\n            component={Menumanage}\n          />\n          <Route\n            exact\n            path=\"/admindashboard/productManage\"\n            component={ProductManage}\n          />\n          <Route\n            exact\n            path=\"/admindashboard/orderManage\"\n            component={OrderManage}\n          />\n          <Route\n            exact\n            path=\"/admindashboard/userManage\"\n            component={UserManage}\n          />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n","F:\\e-com-new-project-main\\client\\src\\Component\\User\\Adminlogin.js",["140"],"import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport \"./adminlogincss.css\";\nimport URL from \"./Url\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { withRouter } from \"react-router-dom\";\nclass Adminlogin extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      mesg: \"\",\n      redirect: false,\n    };\n  }\n\n  onchange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  notify = () => toast.error(this.state.mesg);\n  formsubmit = async (e) => {\n    const { username, password } = this.state;\n    e.preventDefault();\n    await axios\n      .post(\n        `${URL}/login-admin`,\n        { username, password },\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Cotent-Type\": \"application/json\",\n          },\n        }\n      )\n      .then((data) => {\n        console.log(data.data);\n        localStorage.setItem(\"auth\", data.data.token);\n        localStorage.setItem(\"userrole\", data.data.role);\n        localStorage.setItem(\"username\", data.data.username);\n        this.props.history.push(\"/admindashboard\");\n      })\n      .catch((err) => {\n        console.log(err);\n        // this.setState({ mesg: err.response.data.messege.msg });\n        // this.notify();\n      });\n  };\n  render() {\n    return (\n      <div className=\"wrapper fadeInDown\">\n        <div id=\"formContent\">\n          {/* Tabs Titles */}\n          {/* Icon */}\n          <div className=\"fadeIn first\"></div>\n          {/* Login Form */}\n          <form onSubmit={this.formsubmit}>\n            <input\n              type=\"text\"\n              id=\"login\"\n              name=\"username\"\n              value={this.state.username}\n              onChange={this.onchange}\n              className=\"fadeIn second\"\n              placeholder=\"Username\"\n            />\n            <input\n              type=\"text\"\n              id=\"password\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={this.onchange}\n              className=\"fadeIn third\"\n              placeholder=\"password\"\n            />\n            <input\n              type=\"submit\"\n              className=\"fadeIn fourth\"\n              defaultValue=\"Log In\"\n            />\n          </form>\n          <ToastContainer\n            position=\"top-right\"\n            autoClose={5000}\n            hideProgressBar={false}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n          />\n\n          <ToastContainer />\n          {/* Remind Passowrd */}\n          <div id=\"formFooter\">\n            <a className=\"underlineHover\" href=\"#\">\n              Forgot Password?\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default withRouter(Adminlogin);\n","F:\\e-com-new-project-main\\client\\src\\Component\\User\\User.js",["141","142","143"],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Switch, BrowserRouter, Router, Route, Link } from \"react-router-dom\";\nimport Home from './Home';\nimport ProductDetailsPage from './ProductDetailsPage';\nimport URL from './Url';\nimport './user.css';\nimport Userlogin from \"./Userlogin\";\nimport Userregister from \"./Userregister\";\nimport CartPage from \"./CartPage.js/CartPage\";\nimport Header from '../User/Header';\nimport CheckoutPage from './Pages/CheckoutPage';\nimport WishlistPage from './WishlistPage/WishlistPage';\nimport OrderPage from './Pages/OrderPage';\nimport InvoicePage from './Pages/InvoicePage';\nconst User = () => {\n  const [cart, setCart] = useState([])\n  const [cartLength, setCartLength] = useState([])\n  const [wishlist, setWishlist] = useState([]);\n  const [wishlistLength, setWishlistLength] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const saveToCart = async (item, type) => {\n    console.log(item, 'send id');\n    setLoading(true)\n    await axios.post(`http://localhost:7000/addToCart`,\n      {\n        type: type,\n        product: item\n\n      },\n      {\n        headers: {\n          Accept: \"application/json\",\n          \"Cotent-Type\": \"application/json\",\n          \"auth\": localStorage.getItem('auth')\n        },\n      }\n    )\n      .then(res => {\n        console.log(res)\n        setLoading(false)\n      })\n      .catch(err => {\n        console.log(err)\n        setLoading(false)\n      })\n  }\n  const removeCart = async (id) => {\n    setLoading(true)\n    await axios.delete(`http://localhost:7000/deleteCart/${id}`,\n      {\n        headers: {\n          Accept: \"application/json\",\n          \"Cotent-Type\": \"application/json\",\n          \"auth\": localStorage.getItem('auth')\n        },\n      }\n    )\n      .then(res => {\n        setLoading(false)\n        console.log(res)\n      })\n      .catch(err => {\n        setLoading(false)\n        console.log(err)\n      })\n  }\n  const clearCart = () => {\n    setLoading(true)\n    axios.get(`http://localhost:7000/clearCart`,\n      {\n        headers: {\n          Accept: \"application/json\",\n          \"Cotent-Type\": \"application/json\",\n          \"auth\": localStorage.getItem('auth')\n        },\n      }\n    )\n    .then(result=>{\n      setLoading(false)\n    })\n    .catch(error=>{\n      setLoading(false)\n    })\n  }\n  const addToWishlist = async (id) => {\n    setLoading(true)\n    await axios.post(`http://localhost:7000/addToWishlist/${id}`,\n      { name: 2 },\n      {\n        headers: {\n          Accept: \"application/json\",\n          \"Cotent-Type\": \"application/json\",\n          \"auth\": localStorage.getItem('auth')\n        },\n      }\n    )\n      .then(data => {\n        setLoading(false)\n        console.log(data);\n      })\n      .catch(error => {\n        setLoading(false)\n        console.log(error);\n      })\n  }\n\n  const getAllProduct = async () => {\n    await axios.get(`${URL}/get-allproducts`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      }\n    })\n      .then(data => {\n        setProducts(data.data.product)\n      }\n      )\n      .catch(error => {\n        console.log(error);\n\n      })\n  }\n  const getCart = () => {\n    axios.get(\"http://localhost:7000/getCart\",\n      {\n        headers: {\n          Accept: \"application/json\",\n          \"Cotent-Type\": \"application/json\",\n          \"auth\": localStorage.getItem('auth')\n        },\n      }\n    )\n      .then(data => {\n        setCart(data.data[0].cart)\n        setCartLength(data.data[0].cart.length)\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }\n  const getWishlist = () => {\n    axios.get(\"http://localhost:7000/getWishlist\",\n      {\n        headers: {\n          Accept: \"application/json\",\n          \"Cotent-Type\": \"application/json\",\n          \"auth\": localStorage.getItem('auth')\n        },\n      }\n    )\n      .then(data => {\n        setWishlist(data.data[0].wishlist)\n        setWishlistLength(data.data[0].wishlist.length)\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }\n  useEffect(() => {\n    getAllProduct()\n    getCart()\n    getWishlist()\n  }, [loading])\n  console.log(products);\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" render={props => <Home {...props} cartLength={cartLength} addToCart={saveToCart} wishlistLength={wishlistLength} addToWishlist={addToWishlist} />} />\n        <Route exact path=\"/userregister\" component={Userregister} />\n        <Route exact path=\"/userlogin\" component={Userlogin} />\n        <Route exact path=\"/productDetails-Page\" component={ProductDetailsPage} />\n        <Route exact path=\"/cartPage\" render={props => <CartPage {...props} addToCart={saveToCart} cart={cart} deleteCart={removeCart} clearCart={clearCart} products={products} />} />\n        <Route exact path=\"/checkoutPage\" render={props => <CheckoutPage {...props} cart={cart} />} />\n        <Route exact path=\"/wishlistPage\" render={props => <WishlistPage {...props} products={products} wishlist={wishlist} addToCart={saveToCart} />} />\n        <Route exact path=\"/orderPage\" component={OrderPage} />\n        <Route exact path=\"/invoicePage\" component={InvoicePage} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default User;\n\n// import React, { Component } from \"react\";\n// import { Switch, BrowserRouter, Router, Route, Link } from \"react-router-dom\";\n// import Userlogin from \"./Userlogin\";\n// import Userregister from \"./Userregister\";\n// import './user.css'\n// export default class User extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       toggleMenuBar:false,\n//     }\n//   }\n//   render() {\n//     return (\n//       <BrowserRouter>\n//         <div className=\"row\" style={{ justifyContent: \"center\" }}>\n//           <div className=\"header\">\n//             <div className=\"header-wrapper\">\n//               <div className=\"header-item1\">\n//                 <div className=\"logo\">\n//                   hi\n//                 </div>\n//               </div>\n//               <div className=\"header-item2\">\n//                 <li onClick={()=>this.setState(!this.toggleMenuBar)}>item1</li>\n//                 <li onClick={()=>this.setState(!this.toggleMenuBar)}>item2</li>\n//                 <li onClick={()=>this.setState(!this.toggleMenuBar)}>item3</li>\n//                 <li onClick={()=>this.setState(!this.toggleMenuBar)}>item4</li>\n//                 <li onClick={()=>this.setState(!this.toggleMenuBar)}>item5</li>\n//               </div>\n//               <div className=\"header-item3\">\n//                 bye\n//               </div>\n//             </div>\n//             {\n//               this.state.toggleMenuBar ? <div className=\"sub-header\"></div> : null\n//             }\n//           </div>\n\n//         </div>\n//         <Switch>\n//           <Route path=\"/userregister\" component={Userregister} />\n//           <Route path=\"/userlogin\" component={Userlogin} />\n//         </Switch>\n//       </BrowserRouter>\n//     );\n//   }\n// }\n","F:\\e-com-new-project-main\\client\\src\\Component\\User\\Url.js",[],"F:\\e-com-new-project-main\\client\\src\\Component\\Admin\\Uploadproduct.js",["144","145","146"],"import React, { Component } from \"react\";\nimport CKEditor from \"react-ckeditor-component\";\nimport { Multiselect } from \"multiselect-react-dropdown\";\nimport Dropzone from \"react-dropzone\";\nimport axios from \"axios\";\nimport URL, { sub } from \"../User/Url\";\nimport Layout from \"./Layout\";\nexport default class Uploadproduct extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: [],\n      sub: [],\n      data: [],\n      brands: [{ name: \"Apple\" }, { name: \"Iphone\" }, { name: \"Shaomi\" }],\n      Images: [],\n      title: \"\",\n      skunumber: \"\",\n      description: \"\",\n      price: \"\",\n      quantity: \"\",\n      weaight: \"\",\n      category: \"\",\n      subcategory: \"\",\n      brand: \"\",\n      discount: \"\",\n      stock: \"\",\n      shippingdetails: \"\",\n      manufacturesdetails: \"\",\n      selectedsize: [],\n      feature: false,\n      trend: false,\n      available: [{ name: \"L\" }, { name: \"X\" }, { name: \"M\" }],\n      image: \"\",\n    };\n  }\n\n  // onDrop = (files) => {\n  //   console.log(files[0]);\n\n  //   let formData = new FormData();\n  //   const config = {\n  //     header: { \"content-type\": \"multipart/form-data\" },\n  //   };\n  //   formData.append(\"file\", files[0]);\n  //   //save the Image we chose inside the Node Server\n  //   axios\n  //     .post(`${URL}/uploadImage`, formData, config)\n  //     .then((response) => {\n  //       if (response.data.success) {\n  //         this.setState({\n  //           Images: [...this.state.Images, response.data.image],\n  //         });\n  //       } else {\n  //         alert(\"Failed to save the Image in Server\");\n  //       }\n  //     })\n  //     .catch((err) => {\n  //       console.log(\"hi\");\n  //       console.log(err);\n  //     });\n  // };\n  category = (e, t) => {\n    console.log(t);\n    this.state.data.map(item => {\n      if (item.CategoryName === t.name && item.SubCategory.length > 0) {\n        const get = item.SubCategory.map(subCat => {\n          return (\n            { name: subCat.Name }\n          )\n        })\n        this.setState({ sub: get, category: t.name })\n      }\n    })\n\n  }\n  subcategory = (e, t) => {\n    this.setState({ subcategory: t.name })\n  }\n\n\n  // category = (selectedList, selectedItem) => {\n  //   this.setState({ category: selectedItem.name })\n  //   {\n  //     this.state.data.map(item => {\n  //       if (item.SubCategory.length > 0 && item.CategoryName === selectedItem.name) {\n  //         const SubCategory = item.SubCategory.map(itemm => {\n  //           return ({ name: itemm.Name })\n  //         })\n\n  //         this.setState({ sub: SubCategory });\n  //       }\n  //     })\n  //   }\n  // }\n\n  updateContent(newContent) {\n    this.setState({\n      content: newContent,\n    });\n  }\n  onChangedes = (evt) => {\n    console.log(\"onChange fired with event info: \", evt);\n    var newContent = evt.editor.getData();\n    this.setState({\n      description: newContent,\n    });\n  };\n\n  onChangeship = (evt) => {\n    console.log(\"onChange fired with event info: \", evt);\n    var newContent = evt.editor.getData();\n    this.setState({\n      shippingdetails: newContent,\n    });\n  };\n\n  onChangemanu = (evt) => {\n    console.log(\"onChange fired with event info: \", evt);\n    var newContent = evt.editor.getData();\n    this.setState({\n      manufacturesdetails: newContent,\n    });\n  };\n\n  onBlur(evt) {\n    console.log(\"onBlur event called with event info: \", evt);\n  }\n\n  afterPaste(evt) {\n    console.log(\"afterPaste event called with event info: \", evt);\n  }\n  onDelete = (image) => {\n    const currentIndex = this.state.Images.indexOf(image);\n\n    let newImages = [...this.state.Images];\n    newImages.splice(currentIndex, 1);\n\n    this.setState({ Images: newImages });\n  };\n  async componentDidMount() {\n    await axios\n      .get(`${URL}/getmenus`, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((data) => {\n        this.setState({ data: data.data });\n        const category = data.data.map((item) => {\n          return { name: item.CategoryName };\n        });\n\n        this.setState({ options: category });\n      });\n  }\n\n  brand = (selectedList, selectedItem) => {\n    this.setState({ brand: selectedItem.name });\n  };\n\n  onSelect = (selectedList, selectedItem) => {\n    this.setState({ selectedsize: selectedList });\n  };\n\n  onChangeHandler = async (event) => {\n    // console.log(event.target.files[0]);\n    let formData = new FormData();\n    formData.append(\"file\", event.target.files[0]);\n\n    const config = {\n      header: { \"content-type\": \"multipart/form-data\" },\n    };\n\n    await axios\n      .post(`${URL}/uploadImage`, formData, config)\n      .then((response) => {\n        console.log(\"kk\", response);\n        if (response.data.success) {\n          this.setState({\n            Images: [...this.state.Images, response.data.image],\n          });\n        } else {\n          alert(\"Failed to save the Image in Server\");\n        }\n      })\n      .catch((err) => {\n        console.log(\"hi\");\n        console.log(err);\n      });\n  };\n\n  Change = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  trend = (e) => {\n    this.setState({ trend: !this.state.trend });\n  };\n  feature = () => {\n    this.setState({ feature: !this.state.feature });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const {\n      title,\n      Images,\n      skunumber,\n      description,\n      price,\n      quantity,\n      weaight,\n      category,\n      subcategory,\n      brand,\n      discount,\n      stock,\n      shippingdetails,\n      manufacturesdetails,\n      selectedsize,\n      feature,\n      trend,\n    } = this.state;\n    axios\n      .post(\n        `${URL}/uploadProduct`,\n        {\n          title,\n          Images,\n          skunumber,\n          description,\n          price,\n          quantity,\n          weaight,\n          category,\n          subcategory,\n          brand,\n          discount,\n          stock,\n          shippingdetails,\n          manufacturesdetails,\n          selectedsize,\n          feature,\n          trend,\n        },\n        { headers: { \"Content-Type\": \"application/json\" } }\n      )\n      .then((response) => {\n        if (response.data.success) {\n          alert(\"Successfully uploaded\");\n        } else {\n          alert(\"Faild to upload\");\n        }\n      });\n  };\n  render() {\n    return (\n      <Layout>\n      <div className=\"container\">\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          {/* <Dropzone onDrop={this.onDrop} multiple={false} maxSize={800000000}>\n            {({ getRootProps, getInputProps }) => (\n              <div\n                style={{\n                  width: \"300px\",\n                  height: \"240px\",\n                  border: \"1px solid lightgray\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n                {...getRootProps()}\n              >\n                {console.log(\"getRootProps\", { ...getRootProps() })}\n                {console.log(\"getInputProps\", { ...getInputProps() })}\n                <input {...getInputProps()} />\n                <i className=\"fa fa-plus\" style={{ fontSize: \"3rem\" }}></i>\n                <Icon type=\"plus\" style={{ fontSize: \"3rem\" }} />\n              </div>\n            )}\n          </Dropzone> */}\n\n          <div\n            style={{\n              display: \"flex\",\n              width: \"350px\",\n              height: \"240px\",\n              overflowX: \"scroll\",\n            }}\n          >\n            {this.state.Images.map((image, index) => (\n              <div onClick={() => this.onDelete(image)}>\n                <img\n                  style={{ minWidth: \"300px\", width: \"300px\", height: \"240px\" }}\n                  src={`http://localhost:7000/${image}`}\n                  alt={`productImg-${index}`}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n        {/* {this.state.Images.map((image, index) => (\n          <div onClick={() => this.onDelete(image)}>\n            <img\n              style={{ minWidth: \"300px\", width: \"300px\", height: \"240px\" }}\n              src={`/${image}`}\n              alt={`productImg-${index}`}\n            />\n          </div>\n        ))} */}\n\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleInputEmail1\">Select Image</label>\n\n            <input type=\"file\" name=\"file\" onChange={this.onChangeHandler} />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleInputEmail1\">Title</label>\n            <input\n              type=\"text\"\n              name=\"title\"\n              onChange={this.Change}\n              value={this.state.title}\n              className=\"form-control\"\n              id=\"exampleInputEmail1\"\n              aria-describedby=\"emailHelp\"\n              placeholder=\"Enter Title\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleInputEmail1\">SKU Number</label>\n            <input\n              type=\"text\"\n              name=\"skunumber\"\n              onChange={this.Change}\n              value={this.state.skunumber}\n              className=\"form-control\"\n              id=\"exampleInputEmail1\"\n              aria-describedby=\"emailHelp\"\n              placeholder=\"Enter Title\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleInputEmail1\">Discription</label>\n            <CKEditor\n              activeClass=\"p10\"\n              content={this.state.description}\n              value={this.state.description}\n              events={{\n                blur: this.onBlur,\n                afterPaste: this.afterPaste,\n                change: this.onChangedes,\n              }}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleInputEmail1\">Price</label>\n            <input\n              type=\"text\"\n              name=\"price\"\n              onChange={this.Change}\n              value={this.state.price}\n              className=\"form-control\"\n              id=\"exampleInputEmail1\"\n              aria-describedby=\"emailHelp\"\n              placeholder=\"Enter Price\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleInputEmail1\">Quantity</label>\n            <input\n              type=\"text\"\n              name=\"quantity\"\n              onChange={this.Change}\n              value={this.state.quantity}\n              className=\"form-control\"\n              id=\"exampleInputEmail1\"\n              aria-describedby=\"emailHelp\"\n              placeholder=\"Enter Quantity\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleInputEmail1\">Weaight</label>\n            <input\n              type=\"text\"\n              name=\"weaight\"\n              onChange={this.Change}\n              value={this.state.weaight}\n              className=\"form-control\"\n              id=\"exampleInputEmail1\"\n              aria-describedby=\"emailHelp\"\n              placeholder=\"Enter Quantity\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleInputEmail1\">Select Category</label>\n            <Multiselect\n              options={this.state.options} // Options to display in the dropdown\n              selectedValues={this.state.selectedValue} // Preselected value to persist in dropdown\n              onSelect={this.category} // Function will trigger on select event\n              onRemove={this.onRemove} // Function will trigger on remove event\n              displayValue=\"name\" // Property name to display in the dropdown options\n              singleSelect=\"true\"\n            />\n          </div>\n          {this.state.sub.length > 0 && (\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleInputEmail1\">Select Sub Category</label>\n              <Multiselect\n                options={this.state.sub} // Options to display in the dropdown\n                selectedValues={this.state.selectedValue} // Preselected value to persist in dropdown\n                onSelect={this.subcategory} // Function will trigger on select event\n                onRemove={this.onRemove} // Function will trigger on remove event\n                displayValue=\"name\" // Property name to display in the dropdown options\n                singleSelect=\"true\"\n              />\n            </div>\n          )}\n\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleInputEmail1\">Select Brand</label>\n            <Multiselect\n              options={this.state.brands} // Options to display in the dropdown\n              selectedValues={this.state.selectedValue} // Preselected value to persist in dropdown\n              onSelect={this.brand} // Function will trigger on select event\n              onRemove={this.onRemove} // Function will trigger on remove event\n              displayValue=\"name\" // Property name to display in the dropdown options\n              singleSelect=\"true\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleInputEmail1\">Discount</label>\n            <input\n              type=\"text\"\n              name=\"discount\"\n              onChange={this.Change}\n              value={this.state.discount}\n              className=\"form-control\"\n              id=\"exampleInputEmail1\"\n              aria-describedby=\"emailHelp\"\n              placeholder=\"Enter Discount\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleInputEmail1\">Stock</label>\n            <input\n              type=\"text\"\n              name=\"stock\"\n              onChange={this.Change}\n              value={this.state.stock}\n              className=\"form-control\"\n              id=\"exampleInputEmail1\"\n              aria-describedby=\"emailHelp\"\n              placeholder=\"Enter Stock\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleInputEmail1\">Shipping DEtails</label>\n\n            <CKEditor\n              activeClass=\"p10\"\n              content={this.state.shippingdetails}\n              events={{\n                blur: this.onBlur,\n                afterPaste: this.afterPaste,\n                change: this.onChangeship,\n              }}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleInputEmail1\">Manufactures DEtails</label>\n\n            <CKEditor\n              activeClass=\"p10\"\n              content={this.state.manufacturesdetails}\n              events={{\n                blur: this.onBlur,\n                afterPaste: this.afterPaste,\n                change: this.onChangemanu,\n              }}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleInputEmail1\">Select availabel Size</label>\n            <Multiselect\n              options={this.state.available} // Options to display in the dropdown\n              selectedValues={this.state.selectedsize} // Preselected value to persist in dropdown\n              onSelect={this.onSelect} // Function will trigger on select event\n              onRemove={this.onRemove} // Function will trigger on remove event\n              displayValue=\"name\" // Property name to display in the dropdown options\n            />\n          </div>\n\n          <div className=\"form-check\">\n            <input\n              type=\"checkbox\"\n              name=\"featured\"\n              onChange={this.feature}\n              className=\"form-check-input\"\n              id=\"exampleCheck1\"\n            />\n            <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">\n              Is Feature?\n            </label>\n          </div>\n          <div className=\"form-check\">\n            <input\n              type=\"checkbox\"\n              name=\"trend\"\n              onChange={this.trend}\n              className=\"form-check-input\"\n              id=\"exampleCheck1\"\n            />\n            <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">\n              Is Trend?\n            </label>\n          </div>\n\n          <div></div>\n\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n        </form>\n      </div>\n      </Layout>\n    );\n  }\n}\n","F:\\e-com-new-project-main\\client\\src\\Component\\Admin\\Menumanage.js",["147","148","149","150","151","152","153","154"],"import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport URL from \"../User/Url\";\nimport \"./Menutemplate.css\";\nimport FlatList from \"flatlist-react\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\nimport Modal from \"react-modal\";\nimport Layout from \"./Layout\";\n\nexport default class Menumanage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      simplemenu: \"\",\n      dropdownholder: \"\",\n      megamenuholder: \"\",\n      submegamenu: \"\",\n      subdropdownmenu: \"\",\n      selecteddropdwnholder: \"\",\n      selectedmegadwnholder: \"\",\n      topCategory:false,\n      modalIsOpen: false,\n      menus: [],\n      oldCategory: \"\",\n      editableCategory: \"\",\n      oldsubcategory: \"\",\n      editableubdrop: \"\",\n    };\n  }\n  alertsubmit = (id) => {\n    confirmAlert({\n      title: \"Confirm to submit\",\n      message: \"Are you sure to do this.\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: async () => {\n            await axios.get(`${URL}/deletecategory/${id}`).then((data) => {\n              console.log(data);\n              this.componentDidMount();\n            });\n          },\n        },\n        {\n          label: \"No\",\n        },\n      ],\n    });\n  };\n  megaMunuHolderalertsubmit = (id) => {\n    confirmAlert({\n      title: \"Confirm to submit\",\n      message: \"Are you sure to do this.\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: async () => {\n            await axios.get(`${URL}/deletemegaMunecategory/${id}`).then((data) => {\n              console.log(data);\n              this.componentDidMount();\n            });\n          },\n        },\n        {\n          label: \"No\",\n        },\n      ],\n    });\n  };\n  onchange = (data) => {\n    this.setState({ [data.target.name]: data.target.value });\n  };\n  simplemenusub = async () => {\n    const { simplemenu,topCategory } = this.state;\n    await axios\n      .post(\n        `${URL}/savemenu`,\n        { type: \"simplemenu\", category: simplemenu ,topCategory},\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n          },\n        }\n      )\n      .then((data) => {\n        alert(\"Menu aded\");\n        this.componentDidMount();\n      });\n  };\n\n  dropdownholdersub = async () => {\n    const { dropdownholder,topCategory } = this.state;\n    await axios\n      .post(\n        `${URL}/savemenu`,\n        { type: \"dropdownmenuholder\", category: dropdownholder ,topCategory},\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n          },\n        }\n      )\n      .then((data) => {\n        alert(\"dropdownmenu holder aded\");\n        this.componentDidMount();\n      });\n  };\n\n  getmenus = async () => {\n    await axios.get(`${URL}/getmenus`).then((data) => {\n      this.setState({ menus: data.data });\n    });\n  };\n  megamenuholdersub = async () => {\n    const { megamenuholder ,topCategory} = this.state;\n    await axios\n      .post(\n        `${URL}/savemenu`,\n        { type: \"megamenuholder\", category: megamenuholder ,topCategory},\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n          },\n        }\n      )\n      .then((data) => {\n        alert(\"Megamenu holder aded\");\n        this.componentDidMount();\n      });\n  };\n  selectdropdownholder = (e) => {\n    this.setState({ selecteddropdwnholder: e.target.value });\n  };\n  selectmegaholder = (e) => {\n    this.setState({ selectedmegadwnholder: e.target.value });\n  };\n\n  addsubdropdwn = async () => {\n    const { selecteddropdwnholder, subdropdownmenu ,topCategory} = this.state;\n    await axios\n      .post(\n        `${URL}/addsubdrop`,\n        { selecteddropdwnholder, subdropdownmenu,topCategory },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n          },\n        }\n      )\n      .then((data) => {\n        this.setState({ subdropdownmenu: \"\" });\n        this.componentDidMount();\n      });\n  };\n  addsubMega = async () => {\n    const { selectedmegadwnholder, submegamenu ,topCategory} = this.state;\n    await axios\n      .post(\n        `${URL}/addsubMega`,\n        { selectedmegadwnholder, submegamenu ,topCategory },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n          },\n        }\n      )\n      .then((data) => {\n        this.setState({ submegamenu: \"\" });\n        this.componentDidMount();\n      });\n  };\n  deletesubcategory = async (subcategory) => {\n    await axios\n      .post(\n        `${URL}/deletesubcategory`,\n        { subcategory },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n          },\n        }\n      )\n      .then((data) => {\n        if (data.data.success) this.componentDidMount();\n      });\n  };\n  renderPerson = (person, idx) => {\n    return (\n      <li key={idx} className=\"list-unstyled mt-2 mb-2\">\n        <b>{person.Name} </b>\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary btn-sm\"\n          onClick={() => this.subcategoryedit(person.Name)}\n        >\n          <i className=\"fa fa-edit\" style={{ fontSize: \"16px\" }}></i>\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary btn-sm ml-2\"\n          onClick={() => this.deletesubcategory(person.Name)}\n        >\n          <i className=\"fa fa-close\" style={{ fontSize: \"16px\" }}></i>\n        </button>\n      </li>\n    );\n  };\n  renderMegaMenu = (person, idx) => {\n    return (\n      <li key={idx} className=\"list-unstyled mt-2 mb-2\">\n        <b>{person.Name} </b>\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary btn-sm\"\n          onClick={() => this.subcategoryedit(person.Name)}\n        >\n          <i className=\"fa fa-edit\" style={{ fontSize: \"16px\" }}></i>\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary btn-sm ml-2\"\n          onClick={() => this.deletesubcategory(person.Name)}\n        >\n          <i className=\"fa fa-close\" style={{ fontSize: \"16px\" }}></i>\n        </button>\n      </li>\n    );\n  };\n  closeModal = () => {\n    this.setState({ modalIsOpen: false });\n  };\n\n  componentDidMount() {\n    this.getmenus();\n  }\n  subcategoryedit = (subcategory) => {\n    this.setState({\n      oldsubcategory: subcategory,\n      editableubdrop: subcategory,\n      modalIsOpen: true,\n    });\n  };\n  editAble = (cat) => {\n    this.setState({\n      oldCategory: cat,\n      editableCategory: cat,\n      modalIsOpen: true,\n    });\n  };\n  editCategory = async () => {\n    const { oldCategory,editableCategory} = this.state;\n    await axios\n      .post(\n        `${URL}/editCategory`,\n        { oldCategory,editableCategory },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n          },\n        }\n      )\n      .then((data) => {\n        if (data.data.success) this.setState({ modalIsOpen: false });\n        this.componentDidMount();\n      });\n  };\n  editsubdropdwn = async () => {\n    const { oldsubcategory, editableubdrop } = this.state;\n    await axios\n      .post(\n        `${URL}/editsubdrop`,\n        { oldsubcategory, editableubdrop },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n          },\n        }\n      )\n      .then((data) => {\n        if (data.data.success) this.setState({ modalIsOpen: false });\n        this.componentDidMount();\n      });\n  };\n  topCategorySet = ()=>{\n    this.setState({topCategory:!this.state.topCategory})\n  }\n  render() {\n    return (\n      <Layout>\n      <div className=\"container-fluid\">\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onRequestClose={this.closeModal}\n          contentLabel=\"Example Modal\"\n        >\n          <input\n            type=\"text\"\n            onChange={this.onchange}\n            name=\"editableubdrop\"\n            value={this.state.editableubdrop}\n            placeholder=\"enter sub dropdown menu\"\n          ></input>\n          <button type=\"button\" onClick={this.editsubdropdwn}>\n            Add\n          </button>\n        </Modal>\n        {/* <Modal\n          isOpen={this.state.modalIsOpen}\n          onRequestClose={this.closeModal}\n          contentLabel=\"Example Modal\"\n        >\n          <input\n            type=\"text\"\n            onChange={this.onchange}\n            name=\"editableCategory\"\n            value={this.state.editableCategory}\n            placeholder=\"update category\"\n          ></input>\n          <button type=\"button\" onClick={this.editCategory}>\n            Add\n          </button>\n        </Modal> */}\n        <div className=\"form-row \">\n          <div className=\"form-group col-md-4\">\n            <input\n              type=\"text\"\n              name=\"simplemenu\"\n              placeholder=\"Enter a simple menu\"\n              onChange={this.onchange}\n            ></input>\n            <input type=\"checkbox\" name=\"topCategory\" onChange={this.topCategorySet}/>\n            <button type=\"button\" onClick={this.simplemenusub}>\n              Add\n            </button>\n          </div>\n          <div className=\"form-group col-md-4\">\n            <input\n              type=\"text\"\n              name=\"dropdownholder\"\n              placeholder=\"Enter Dropdownholder\"\n              onChange={this.onchange}\n            ></input>\n            <input type=\"checkbox\" name=\"topCategory\" onChange={this.topCategorySet}/>\n            <button type=\"button\" onClick={this.dropdownholdersub}>\n              Add\n            </button>\n          </div>\n          <div className=\"form-group col-md-4\">\n            <input\n              type=\"text\"\n              name=\"megamenuholder\"\n              placeholder=\"Enter a Megamenuholder\"\n              onChange={this.onchange}\n            ></input>\n            <input type=\"checkbox\" name=\"topCategory\" onChange={this.topCategorySet}/>\n            <button type=\"button\" onClick={this.megamenuholdersub}>\n              Add\n            </button>\n          </div>\n        </div>\n        <div className=\"form-row\">\n          <div className=\"form-group col-md-6\">\n            <label>Select dropdownholder</label>\n            <select onChange={this.selectdropdownholder}>\n              <option value=\"0\"> Please select dropdownholder</option>\n              {this.state.menus.map((item, index) => {\n                if (item.Type == \"dropdownmenuholder\") {\n                  return (\n                    <option key={index} value={item.CategoryName}>\n                      {item.CategoryName}\n                    </option>\n                  );\n                }\n              })}\n            </select>\n            \n            <br></br>\n            <input\n              type=\"text\"\n              onChange={this.onchange}\n              name=\"subdropdownmenu\"\n              value={this.state.subdropdownmenu}\n              placeholder=\"enter sub dropdown menu\"\n            ></input>\n            <input type=\"checkbox\" name=\"topCategory\" onChange={this.topCategorySet}/>\n            <button type=\"button\" onClick={this.addsubdropdwn}>\n              Add\n            </button>\n          </div>\n          <div className=\"form-group col-md-6\">\n            <label>Select Megamenu Holder</label>\n            <select onChange={this.selectmegaholder}>\n              <option value=\"0\"> Please select Megaholder</option>\n              {this.state.menus.map((item, index) => {\n                if (item.Type == \"megamenuholder\") {\n                  return (\n                    <option key={index} value={item.CategoryName}>\n                      {item.CategoryName}\n                    </option>\n                  );\n                }\n              })}\n            </select>\n            <br></br>\n            <input\n              type=\"text\"\n              name=\"submegamenu\"\n              onChange={this.onchange}\n              value={this.state.submegamenu}\n              placeholder=\"Enter submegamenu\"\n            ></input>\n            <input type=\"checkbox\" name=\"topCategory\" onChange={this.topCategorySet}/>\n            <button type=\"button\" onClick={this.addsubMega}>Add</button>\n          </div>\n        </div>\n        <div className=\"d-flex justify-content-center\">\n          <h2>All Drop Menus</h2>\n        </div>\n        {this.state.menus.map((item, index) => {\n          if (item.Type === \"dropdownmenuholder\") {\n            return (\n              <div key={index}>\n                <div className=\"d-flex justify-content-center my-4\">\n                  <button type=\"button\" className=\"btn btn-primary btn-lg\">\n                    {item.CategoryName}\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-secondary btn-sm\"\n                    onClick={() =>\n                      this.editAble(item.CategoryName)\n                    }\n                  >\n                    <i className=\"fa fa-edit\" style={{ fontSize: \"16px\" }}></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-secondary btn-sm ml-2\"\n                    onClick={() => this.alertsubmit(item._id)}\n                  >\n                    <i className=\"fa fa-close\" style={{ fontSize: \"16px\" }}></i>\n                  </button>\n                </div>\n\n                <div className=\"row\">\n                  <FlatList\n                    list={item.SubCategory}\n                    renderItem={this.renderPerson}\n                    renderWhenEmpty={() => (\n                      <div className=\"d-flex justify-content-center my-4\">\n                        You didn't add any sub category yet\n                      </div>\n                    )}\n                    display={{\n                      grid: true,\n                      minColumnWidth: \"5px\",\n                      gridGap: \"10px\",\n                    }}\n                  />\n                </div>\n              </div>\n            );\n          }\n        })}\n        {this.state.menus.map((item, index) => {\n          if (item.Type === \"megamenuholder\") {\n            return (\n              <div key={index}>\n                <div className=\"d-flex justify-content-center my-4\">\n                  <button type=\"button\" className=\"btn btn-primary btn-lg\">\n                    {item.CategoryName}\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-secondary btn-sm\"\n                    onClick={() =>\n                      this.editAble(item.CategoryName)\n                    }\n                  >\n                    <i className=\"fa fa-edit\" style={{ fontSize: \"16px\" }}></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-secondary btn-sm ml-2\"\n                    onClick={() => this.alertsubmit(item._id)}\n                  >\n                    <i className=\"fa fa-close\" style={{ fontSize: \"16px\" }}></i>\n                  </button>\n                </div>\n\n                <div className=\"row\">\n                  <FlatList\n                    list={item.SubCategory}\n                    renderItem={this.renderMegaMenu}\n                    renderWhenEmpty={() => (\n                      <div className=\"d-flex justify-content-center my-4\">\n                        You didn't add any sub category yet\n                      </div>\n                    )}\n                    display={{\n                      grid: true,\n                      minColumnWidth: \"5px\",\n                      gridGap: \"10px\",\n                    }}\n                  />\n                </div>\n              </div>\n            );\n          }\n        })}\n        <h2>Top Categories</h2>\n                {\n                  this.state.menus.map((item, index)=>{\n                    if(item.topCategory){\n                      return(<h3 key={index}>{item.CategoryName}</h3>)\n                    }\n                  })\n                }\n                {\n                  this.state.menus.map((item, index)=>{\n                      return(\n                        <div key={index}>\n                          {item.SubCategory.map((sub,index)=>{\n                            if(sub.topCategory){\n                              return(<h3 key={index}>{sub.Name}</h3>)\n                            }\n                          })}\n                        </div>\n                        )\n                  })\n                }\n      </div>\n      </Layout>\n    );\n  }\n}\n","F:\\e-com-new-project-main\\client\\src\\Component\\User\\Home.js",["155"],"import React from 'react';\nimport Header from './Header';\nimport ProductDetailsPage from './ProductDetailsPage';\nimport ProductShow from './ProductShow';\nimport ShowCase from './ShowCase';\nimport TopHeading from './TopHeading';\n\nconst Home = ({cartLength,addToCart,addToWishlist}) => {\n    return (\n        <>\n            <Header cartLength={cartLength}></Header>\n            <TopHeading></TopHeading>\n            <ShowCase></ShowCase>\n            <ProductShow addToCart={addToCart} addToWishlist={addToWishlist}></ProductShow>\n        </>\n    );\n};\n\nexport default Home;","F:\\e-com-new-project-main\\client\\src\\Component\\User\\ProductDetailsPage.js",[],"F:\\e-com-new-project-main\\client\\src\\Component\\User\\Userlogin.js",[],"F:\\e-com-new-project-main\\client\\src\\Component\\User\\Userregister.js",[],"F:\\e-com-new-project-main\\client\\src\\Component\\User\\Header.js",["156","157","158"],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport URL from './Url';\n\nconst Header = (props) => {\n  const [toggleMenuBar, setToggleMenuBar] = useState(false);\n  const [menus, setMenus] = useState([]);\n  const [subMenus, setSubMenus] = useState([]);\n  const handelOnClick = (sub) => {\n    setToggleMenuBar(!toggleMenuBar)\n    setSubMenus(sub)\n  }\n  const getmenus = () => {\n    axios.get(`${URL}/getmenus`).then((data) => {\n      setMenus(data.data)\n    });\n  };\n  useEffect(() => {\n    getmenus()\n  }, [])\n  console.log(props.cartLength);\n  \n  return (\n    <div className=\"row\" style={{ justifyContent: \"center\" }}>\n      <div className=\"header\">\n        <div className=\"header-wrapper\">\n          <div className=\"header-item1\">\n            <div className=\"logo\">\n              <Link to=\"/\"><span>BuyForest</span></Link>\n            </div>\n          </div>\n          <div className=\"header-item2\">\n            {\n              menus.map((item, index) => {\n                if (item.Type === \"simplemenu\") {\n                  return (\n                    <li key={index}>{item.CategoryName}</li>\n                  )\n                }\n              })\n            }\n            {\n              menus.map((item, index) => {\n                if (item.Type === \"dropdownmenuholder\") {\n                  return (\n                    <li key={index}>{item.CategoryName}</li>\n                  )\n                }\n              })\n            }\n            {\n              menus.map((item, index) => {\n                if (item.Type === \"megamenuholder\") {\n                  return (\n\n                    <li\n                      key={index}\n                      onClick={() => handelOnClick(item.SubCategory)}\n                    >{item.CategoryName}</li>\n\n\n                  )\n                }\n              })\n            }\n          </div>\n          <div className=\"header-item3\" style={{'display':'flex','justifyContent':'space-around'}}>\n            <Link to=\"/cartPage\"><span className=\"cart\"><sup>{props.cartLength}</sup>cart</span></Link><br />\n            <Link to=\"/wishlistPage\"><span className=\"cart\"><sup>{props.wishlistLength}</sup>wish</span></Link>\n            \n          </div>\n        </div>\n        {\n          toggleMenuBar ? <div className=\"sub-header\">\n            {\n              subMenus.map((item, index) => {\n                return (<li key={index}>{item.Name}</li>)\n              })\n            }\n          </div> : null\n        }\n      </div>\n\n    </div>\n  );\n};\n\nexport default Header;","F:\\e-com-new-project-main\\client\\src\\Component\\User\\WishlistPage\\WishlistPage.js",["159","160"],"import axios from 'axios';\r\nimport React, { useState } from 'react';\r\n\r\nconst WishlistPage = ({ products, wishlist,addToCart }) => {\r\n  const [list , setList]=useState('');\r\n  let wishproductlist = []\r\n\r\n  for(let product of products ){\r\n    for(let wishproduct of wishlist){\r\n      if( product._id === wishproduct.productId){\r\n        wishproductlist.push(product)\r\n      }\r\n    }\r\n  }\r\n  console.log(wishproductlist,'jhgklfdkj');\r\n  \r\n  const deleteWishList =async(id)=>{\r\n    await axios.delete(`http://localhost:7000/deletewishlist/${id}`,\r\n    {\r\n      headers: {\r\n          Accept: \"application/json\",\r\n          \"Cotent-Type\": \"application/json\",\r\n          \"auth\": localStorage.getItem('auth')\r\n      },\r\n    }\r\n    )\r\n    .then(result=>{\r\n      console.log(result);\r\n      \r\n    })\r\n    .catch(error=>{\r\n      console.log(error);\r\n      \r\n    })\r\n  }\r\n  const clearWIshList =async()=>{\r\n    await axios.get(\"http://localhost:7000/clearwishlist\",\r\n    {\r\n      headers: {\r\n          Accept: \"application/json\",\r\n          \"Cotent-Type\": \"application/json\",\r\n          \"auth\": localStorage.getItem('auth')\r\n      },\r\n    }\r\n    )\r\n    .then(result=>{\r\n      console.log(result);\r\n      \r\n    })\r\n    .catch(error=>{\r\n      console.log(error);\r\n      \r\n    })\r\n  }\r\n  console.log(wishproductlist);\r\n  \r\n  return (\r\n    <>\r\n      {\r\n        wishproductlist.map((item,index)=>{\r\n          return(\r\n            <div id=\"cart\">\r\n        <div className=\"img\">\r\n          <img src=\"\" alt=\"pic\" />\r\n        </div>\r\n        <div className=\"productName\">\r\n          <h2>{item.title}</h2>\r\n          <p>{item.description}</p>\r\n        </div>\r\n        <div className=\"buttons-area\">\r\n          <div className=\"taka\">\r\n            <span>{item.price}</span>\r\n          </div>\r\n          \r\n          <div className=\"delete\">\r\n            <button onClick={()=>addToCart(item._id,\"add\")}>add to cart</button><br /><br />\r\n            <button onClick={()=>deleteWishList(item._id)}>delete</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n          )\r\n        })\r\n      }\r\n      <button onClick={clearWIshList}>clear cart</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WishlistPage;","F:\\e-com-new-project-main\\client\\src\\Component\\User\\CartPage.js\\CartPage.js",["161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport './cart.css'\r\nconst CartPage = ({ cart, addToCart, deleteCart, clearCart, products }) => {\r\n  const [product, setProduct] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [totalPrice, setTotalPrice] = useState();\r\n  const [totalVat, setTotalVat] = useState();\r\n\r\n\r\n\r\n\r\n\r\n  const [name, setName] = useState('');\r\n  const [mobile, setMobile] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [thana, setThana] = useState('');\r\n  const [postal, setPostal] = useState('');\r\n  const [road, setRoad] = useState('');\r\n\r\n  const [orderid, setOrderid] = useState('');\r\n  const [paymentid, setPaymentid] = useState('');\r\n  const [total, setTotal] = useState('');\r\n  const [dateofpurcashe, setDateofpurcashe] = useState('');\r\n  const [orderstatus, setOrderstatus] = useState('');\r\n  const [paymentmethod, setPaymentmethod] = useState('');\r\n  const [checkout, setCheckout] = useState(false);\r\n\r\n\r\n  const setOrder = async () => {\r\n    const orderInfo = {\r\n      orderid:Math.floor((Math.random() * 100) + 1),\r\n      paymentid:'1232344',\r\n      address:{\r\n        name,\r\n        thana,\r\n        mobile,\r\n        address,\r\n        postal,\r\n        road\r\n      },\r\n      products:product,\r\n      total:totalPrice+totalVat,\r\n      dateofpurcashe:Date.now(),\r\n      orderstatus:'pending',\r\n      paymentmethod: 'paypal',\r\n    }\r\n    await axios.post(\"http://localhost:7000/createOrder\", orderInfo, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Cotent-Type\": \"application/json\",\r\n        \"auth\": localStorage.getItem('auth')\r\n      },\r\n    })\r\n      .then(result => {\r\n        console.log(result);\r\n\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n\r\n      })\r\n  }\r\n  \r\n  const makePd = () => {\r\n    const items = [];\r\n    let total = 0;\r\n    let vat = 0;\r\n    cart.map(item => {\r\n      products.map(pd => {\r\n        console.log(pd, 'pdpdppdpdp');\r\n        if (pd._id === item.productId) {\r\n          items.push({ ...pd, item })\r\n          total = total + pd.price * item.quantity;\r\n          vat = vat + (pd.price * item.quantity) * 15 / 100;\r\n          setTotalPrice(total)\r\n          setTotalVat(vat)\r\n        }\r\n      }\r\n      )\r\n    }\r\n    )\r\n    setProduct(items)\r\n  }\r\n\r\n  useEffect(() => {\r\n    makePd()\r\n  }, [cart, loading])\r\n  console.log(product);\r\n  console.log(totalPrice);\r\n\r\n  return (\r\n    <>\r\n      {\r\n        checkout ?\r\n        <>\r\n          <button onClick={() => setCheckout(false)}>go back</button>\r\n          <div>\r\n            <input type=\"text\" value={name} placeholder=\"name\" onChange={(e) => setName(e.target.value)} /><br /><br />\r\n            <input type=\"text\" value={mobile} placeholder=\"mobile\" onChange={(e) => setMobile(e.target.value)} /><br /><br />\r\n            <input type=\"text\" value={address} placeholder=\"address\" onChange={(e) => setAddress(e.target.value)} /><br /><br />\r\n            <input type=\"text\" value={thana} placeholder=\"thana\" onChange={(e) => setThana(e.target.value)} /><br /><br />\r\n            <input type=\"text\" value={postal} placeholder=\"postal\" onChange={(e) => setPostal(e.target.value)} /><br /><br />\r\n            <input type=\"text\" value={road} placeholder=\"road\" onChange={(e) => setRoad(e.target.value)} /><br /><br />\r\n            {/* <PaypalExpressBtn env={env} client={client} currency={currency} total={total} onError={onError} onSuccess={onSuccess} onCancel={onCancel} /> */}\r\n            <button onClick={setOrder}>paypal</button>\r\n          </div>\r\n        </>\r\n      :\r\n      <>\r\n      {\r\n        !cart.length && !checkout ? <p>cart is empty</p> :\r\n          product.map((item, index) => {\r\n            return (\r\n              <div key={index} id=\"cart\">\r\n                <div className=\"img\">\r\n                  <img src={item.Images[0]} alt=\"pic\" />\r\n                </div>\r\n                <div className=\"productName\">\r\n                  <h2>{item.title}</h2>\r\n                  <p>{item.description}</p>\r\n                </div>\r\n                <div className=\"buttons-area\">\r\n                  <div className=\"taka\">\r\n                    <span>{item.price * item.item.quantity}</span>\r\n                  </div>\r\n                  <div className=\"quantity\">\r\n                    <button onClick={() => addToCart(item._id, \"minus\")}>-</button>\r\n                    <span>{item.item.quantity}</span>\r\n                    <button onClick={() => addToCart(item._id, \"add\")}>+</button>\r\n                  </div>\r\n                  <div className=\"delete\">\r\n                    <button onClick={() => deleteCart(item._id)}>delete</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )\r\n          })\r\n      }\r\n      \r\n      <button onClick={clearCart}>clear cart</button>\r\n      <span>total:{totalPrice}</span><br /><br />\r\n      <span>vat:{totalVat}</span><br /><br />\r\n      <span>total amount:{totalPrice + totalVat}</span>\r\n      <br /><br /><br /><br /><br />\r\n      <button onClick={()=>setCheckout(true)}>checkout</button>\r\n      </>\r\n    }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartPage;","F:\\e-com-new-project-main\\client\\src\\Component\\User\\Pages\\CheckoutPage.js",["178","179","180","181","182","183","184","185"],"import axios from 'axios';\r\nimport React, { useState } from 'react';\r\n// import PaypalExpressBtn from 'react-paypal-express-checkout';\r\nconst CheckoutPage = ({cart}) => {\r\n  const [name, setName] = useState('');\r\n  const [mobile, setMobile] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [thana, setThana] = useState('');\r\n  const [postal, setPostal] = useState('');\r\n  const [road, setRoad] = useState('');\r\n\r\n  const [orderid , setOrderid]=useState('');\r\n  const [paymentid , setPaymentid]=useState('');\r\n  const [products , setProducts]=useState('');\r\n  const [total , setTotal]=useState('');\r\n  const [dateofpurcashe , setDateofpurcashe]=useState('');\r\n  const [orderstatus , setOrderstatus]=useState('');\r\n  const [paymentmethod , setPaymentmethod]=useState('');\r\n\r\n  console.log(cart);\r\n      \r\n  const setOrder = async()=>{\r\n    const orderInfo = {\r\n      orderid,\r\n      paymentid,\r\n      products,\r\n      total,\r\n      dateofpurcashe,\r\n      orderstatus,\r\n      paymentmethod:'paypal',\r\n    }\r\n    await axios.post(\"http://localhost:7000/createOrder\",orderInfo,{\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Cotent-Type\": \"application/json\",\r\n        \"auth\": localStorage.getItem('auth')\r\n    },\r\n    })\r\n    .then(result=>{\r\n      console.log(result);\r\n      \r\n    })\r\n    .catch(error=>{\r\n      console.log(error);\r\n      \r\n    })\r\n  }\r\n//   const onSuccess = async(payment) => {\r\n//     const orderInfo = {\r\n//       orderid,\r\n//       paymentid:'#0',\r\n//       products,\r\n//       total:'1209',\r\n//       dateofpurcashe,\r\n//       orderstatus,\r\n//       paymentmethod:'paypal',\r\n//       name,mobile,address,thana,postal,road\r\n//     }\r\n//     function getNumber(callback) {\r\n//       var n = Math.floor(Math.random() * 1000);\r\n//       Users.findOne(\r\n//         { orderid: n },\r\n//         function (err, result) {\r\n//           if (err) callback(err);\r\n//           else if (result) return getNumber(callback);\r\n//           else callback(null, n);\r\n//         }\r\n//       );\r\n//     }\r\n\r\n//     getNumber(function (error, number) {\r\n//       const newUser = new Users({\r\n//         ...orderInfo,\r\n//         orderid: number,\r\n//         myrefused: 0,\r\n//       });\r\n//       setOrder(newUser)\r\n//     })\r\n    \r\n//     console.log(\"The payment was succeeded!\", payment);\r\n//     // You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\r\n//   }\r\n\r\n//   const onCancel = (data) => {\r\n//     // User pressed \"cancel\" or close Paypal's popup!\r\n//     console.log('The payment was cancelled!', data);\r\n//     // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\r\n// }\r\n\r\n//   const onError = (err) => {\r\n//     // The main Paypal's script cannot be loaded or somethings block the loading of that script!\r\n//     console.log(\"Error!\", err);\r\n//     // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\r\n//     // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\r\n//   }\r\n\r\n//   let env = 'sandbox'; // you can set here to 'production' for production\r\n//   let currency = 'USD'; // or you can set this value from your props or state\r\n//   // let total = 1; // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\r\n//   // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\r\n\r\n//   const client = {\r\n//     sandbox: 'AfRPtsoxbVeHQfNEWVnXnkPYYSFe1FWY_9JTIRCoY3Vj-NBeosHQ81-YSXMSgPMV6xhNnlx4SSg4NLAd',\r\n//     production: 'YOUR-PRODUCTION-APP-ID',\r\n//   }\r\n  return (\r\n    <div>\r\n        <input type=\"text\" value={name} placeholder=\"name\" onChange={(e) => setName(e.target.value)} /><br /><br />\r\n        <input type=\"text\" value={mobile} placeholder=\"mobile\" onChange={(e) => setMobile(e.target.value)} /><br /><br />\r\n        <input type=\"text\" value={address} placeholder=\"address\" onChange={(e) => setAddress(e.target.value)} /><br /><br />\r\n        <input type=\"text\" value={thana} placeholder=\"thana\" onChange={(e) => setThana(e.target.value)} /><br /><br />\r\n        <input type=\"text\" value={postal} placeholder=\"postal\" onChange={(e) => setPostal(e.target.value)} /><br /><br />\r\n        <input type=\"text\" value={road} placeholder=\"road\" onChange={(e) => setRoad(e.target.value)} /><br /><br />\r\n        {/* <PaypalExpressBtn env={env} client={client} currency={currency} total={total} onError={onError} onSuccess={onSuccess} onCancel={onCancel} /> */}\r\n        <button onClick={setOrder}>paypal</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckoutPage;","F:\\e-com-new-project-main\\client\\src\\Component\\User\\TopHeading.js",[],"F:\\e-com-new-project-main\\client\\src\\Component\\User\\ProductShow.js",["186","187","188","189","190","191"],"import React, { Component, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Product from './Product';\nimport './productShow.css';\nimport man1 from './img/man1.jpg';\nimport axios from 'axios';\nimport URL from './Url';\nimport { set } from 'mongoose';\nconst ProductShow = ({addToCart,addToWishlist}) => {\n    const [products, setProducts] = useState([]);\n    const [psize, setpSize] = useState();\n    const [skip, setSkip] = useState(0);\n    const [limit, setLimit] = useState(8);\n    const [loadMores, setLoadMores] = useState(false);\n\n    const getAllProduct = async (variables) => {\n        await axios.post(`${URL}/get-products`,\n            { variables }, {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\",\n            }\n        })\n            .then(data => {\n                if (data.data.success && loadMores) {\n                    console.log('loadmore true')\n                    console.log(data.data.postSize);\n                    const update = products.concat(data.data.product)\n                    setProducts(update)\n                    setpSize(data.data.postSize)\n                    setLoadMores(false)\n                }\n                else {\n                    setProducts(data.data.product)\n                    setpSize(data.data.postSize)\n                    console.log(data.data.product);\n                    setLoadMores(false)\n                }\n            })\n    }\n    useEffect(() => {\n        const variables = { skip, limit }\n        getAllProduct(variables)\n    }, [])\n    useEffect(() => {\n        const variables = { skip, limit }\n        getAllProduct(variables)\n    }, [skip])\n    const loadMore = () => {\n        setLoadMores(true)\n        setSkip(skip + 8)\n        setLimit(8)\n    }\n    return (\n        <div className=\"product-container\">\n            <h2>Featured Product</h2>\n            <div className=\"product-wrp\">\n                {products.map((item, index) => {\n                    return (\n                        <div key={index} className=\"product-show\" style={{width:'250px',textAlign:'center',border:'1px solid #3333',padding:'10px'}}>\n                            <div className=\"image\"style={{height:'200px'}}>\n                                <Link to=\"/productDetails-Page\">\n                                    <img src={`${URL}/${item.Images[0]}`} alt=\"pic\" style={{width:'100%',height:'100%'}}/>\n                                </Link>\n                            </div>\n                            <h3>{item.title}</h3>\n                            <div className=\"show-addCart\">\n                                <button type=\"button\" className=\"btn\" onClick={() => addToCart(item._id,\"add\")} style={{border:'1px solid #333',background:'#dddd',color:'#222',margin:'7px'}}>Add to cart</button>\n                                <button type=\"button\" onClick={()=>addToWishlist(item._id)} style={{border:'1px solid #333',background:'#dddd',color:'#222',margin:'7px'}}>add to favourite</button>\n                            </div>\n                        </div>\n                    )\n                })}\n            </div>\n            {\n                psize >= 8 && (\n                    <div className=\"load-more\">\n                        <button onClick={() => loadMore()}>Load More And</button>\n                    </div>\n                )\n            }\n        </div>\n    );\n}\n\n\nexport default ProductShow;\n","F:\\e-com-new-project-main\\client\\src\\Component\\User\\ShowCase.js",["192","193"],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport MainSlider from './MainSlider';\nimport URL from './Url';\nimport './user.css'\nconst ShowCase = () => {\n    const [box, setBox] = useState(false)\n    const [menus, setMenus] = useState([])\n    const priceBox = () => {\n\n    }\n    const getmenus = async () => {\n        await axios.get(`${URL}/getmenus`)\n        .then((data) => {\n            setMenus(data.data)\n        })\n        .catch(error=>{\n            console.log(error);\n        })\n    };\n    useEffect(() => {\n        getmenus()\n    }, [])\n    console.log(menus);\n\n    return (\n        <div id=\"showCase\">\n            <div className=\"showCase-wrapper\">\n                <div className=\"showCase-item1\">\n                    <div className=\"box\">\n                        <div className=\"sub-box\">\n                            <button type=\"button\" className=\"price-btn\" onClick={() => setBox(!box)}>Price Filter</button>\n                            <input type=\"search\" name=\"search\" placeholder=\"Enter search item\" className=\"search-inp\" />\n                        </div>\n                        {\n                            box ?\n                                <div className=\"dropBox\">\n                                    <div>\n                                        <input type=\"checkbox\" name=\"\" id=\"\" />\n                                        <label>0-50</label>\n                                    </div>\n                                    <div>\n                                        <input type=\"checkbox\" name=\"\" id=\"\" />\n                                        <label>0-50</label>\n                                    </div>\n                                    <div>\n                                        <input type=\"checkbox\" name=\"\" id=\"\" />\n                                        <label>0-50</label>\n                                    </div>\n                                    <div>\n                                        <input type=\"checkbox\" name=\"\" id=\"\" />\n                                        <label>0-50</label>\n                                    </div>\n                                    <div>\n                                        <input type=\"checkbox\" name=\"\" id=\"\" />\n                                        <label>0-50</label>\n                                    </div>\n                                </div>\n                                : null\n                        }\n                    </div>\n                    <div className=\"top-cat\">\n                        <h2>Top Categories</h2>\n                        <div className=\"categories-item\">\n                            <ul>\n                                {\n                                    menus.map((item, index) => {\n                                        if (item.topCategory) {\n                                            return (\n                                                <li key={index}>{item.CategoryName}</li>\n                                            )\n                                        }\n                                    })\n                                }\n                                {/* <li>Lorem ipsum dolor sit amet.</li>\n                                <li>Lorem ipsum dolor sit amet.</li>\n                                <li>Lorem ipsum dolor sit amet.</li> */}\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"showCase-item2\">\n                    <MainSlider></MainSlider>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ShowCase;","F:\\e-com-new-project-main\\client\\src\\Component\\User\\Product.js",["194","195"],"import React from 'react';\nimport './productShow.css'\nimport {Link} from \"react-router-dom\";\nimport man1 from './img/man1.jpg'\nconst Product = () => {\n    \n    return (\n        <div id=\"product\">\n            \n        </div>\n    );\n};\n\nexport default Product;","F:\\e-com-new-project-main\\client\\src\\Component\\User\\MainSlider.js",[],["196","197"],"F:\\e-com-new-project-main\\client\\src\\Component\\User\\Pages\\OrderPage.js",["198"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst OrderPage = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [orderDetailsProduct, setOrderDetailsProduct] = useState([]);\r\n  const [details, setDetails] = useState(false);\r\n  const getOrder = async () => {\r\n    await axios.get(\"http://localhost:7000/getOrder\",\r\n      {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Cotent-Type\": \"application/json\",\r\n          \"auth\": localStorage.getItem('auth')\r\n        }\r\n      }\r\n    )\r\n      .then(result => {\r\n        console.log(result, 'iryweiruyewiury');\r\n\r\n        setOrders(result.data.myOrder)\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  }\r\n  const detailsShow = (id) => {\r\n    orders.filter(item => {\r\n      if (item._id === id) {\r\n        setOrderDetailsProduct(item.products)\r\n      }\r\n    })\r\n    setDetails(true)\r\n  }\r\n  const history = useHistory();\r\n  const printPage =()=>{\r\n    history.push('/invoicePage')\r\n  }\r\n  useEffect(() => {\r\n    getOrder()\r\n  }, [])\r\n  console.log(orders);\r\n  console.log(orderDetailsProduct);\r\n  return (\r\n    <>\r\n      {\r\n        details\r\n          ?\r\n          <>\r\n            <div>\r\n              <p>My Orders / Tracking</p>\r\n              <hr />\r\n              <div>Order Id: </div>\r\n              <div style={{ 'display': 'flex', 'justifyContent': 'space-around', 'alignItem': 'center' }}>\r\n                <div style={{ 'padding': '10px' }}>\r\n                  <h2>Estimated Delivery Time</h2>\r\n                  <p>date </p>\r\n                  <p>time</p>\r\n                </div>\r\n                <div style={{ 'textAlign': 'center' }}>\r\n                  <h2>Shipping By: </h2>\r\n                  <p>shipping by | mobile number</p>\r\n                </div>\r\n                <div style={{ 'textAlign': 'center' }}>\r\n                  <p>Status: </p>\r\n                  <button>pending</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <p>set order status by admin</p>\r\n            </div>\r\n            <div style={{ 'display': 'flex', 'justifyContent': 'space-around', 'alignItem': 'center' }}>\r\n              {\r\n                orderDetailsProduct.map((items, index) => {\r\n                  return (\r\n                    <div style={{ border: '1px solid #3333', padding: '10px' }}>\r\n                      <p>{items.title}</p>\r\n                      <p>{items.price}</p>\r\n                    </div>\r\n                  )\r\n                })\r\n              }\r\n            </div>\r\n          </>\r\n          :\r\n          <>\r\n            <div style={{ 'display': 'grid', 'gridTemplateRows': '1fr 1fr' }}>\r\n              <div className=\"item1\" style={{ 'display': 'grid', 'gridTemplateColumns': '1fr 2fr 1fr 2fr 1fr 1fr' }}>\r\n                <p>S No</p>\r\n                <p>order id</p>\r\n                <p>status</p>\r\n                <p>statusDate / Time</p>\r\n                <p>invoice</p>\r\n                <p>order details</p>\r\n              </div>\r\n              {\r\n                orders.map((item, index) => {\r\n                  return (\r\n                    <div className=\"item2\" style={{ 'display': 'grid', 'gridTemplateColumns': '1fr 2fr 1fr 2fr 1fr 1fr' }}>\r\n                      <p>{index + 1}</p>\r\n                      <p>{item.orderid}</p>\r\n                      <p>{item.orderstatus}</p>\r\n                      <p><Moment >{item.createdAt}</Moment></p>\r\n                      <button onClick={printPage}>print/save</button>\r\n                      <button onClick={() => detailsShow(item._id)}>click</button>\r\n                    </div>\r\n                  )\r\n                })\r\n              }\r\n            </div>\r\n          </>\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderPage;","F:\\e-com-new-project-main\\client\\src\\Component\\User\\Pages\\InvoicePage.js",[],"F:\\e-com-new-project-main\\client\\src\\Component\\User\\Pages\\InvoiceLayout.js",[],"F:\\e-com-new-project-main\\client\\src\\Component\\Admin\\Page\\ProductManage.js",["199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport URL from '../../User/Url';\r\nimport Layout from '../Layout';\r\n\r\n\r\nconst ProductManage = () => {\r\n  const [product , setProduct]=useState([]);\r\n  const [open , setOpen]=useState(false);\r\n  const [editabale , setEditabale]=useState({});\r\n\r\n  const [Images , setImages]=useState([]);\r\n  const [title , setTitle]=useState('');\r\n  const [skunumber , setSkunumber]=useState('');\r\nconst [description , setDescription]=useState('');\r\nconst [price , setPrice]=useState('');\r\nconst [quantity , setQuantity]=useState('');\r\nconst [weaight , setWeaight]=useState('');\r\nconst [category , setCategory]=useState('');\r\nconst [subcategory , setSubcategory]=useState('');\r\nconst [brand , setBrand]=useState('');\r\nconst [discount , setDiscount]=useState('');\r\nconst [stock , setStock]=useState('');\r\nconst [shippingdetails , setShippingdetails]=useState('');\r\nconst [manufacturesdetails , setManufacturesdetails]=useState('');\r\nconst [selectedsize , setSelectedsize]=useState([]);\r\n\r\n\r\n\r\n\r\n  const getAllProduct = async () => {\r\n    await axios.get(`${URL}/get-allproducts`, {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n            \"auth\": localStorage.getItem('auth')\r\n        }\r\n    })\r\n        .then(data => {\r\n          setProduct(data.data.product)\r\n        })\r\n        .catch(error=>{\r\n          console.log(error);\r\n          \r\n        })\r\n}\r\n  const deleteProduct = async (id) => {\r\n    await axios.get(`${URL}/delete-product/${id}`, {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n        }\r\n    })\r\n        .then(data => {\r\n          setProduct(data.data.product)\r\n        })\r\n        .catch(error=>{\r\n          console.log(error);\r\n          \r\n        })\r\n}\r\nconst updateProduct = async(id) =>{\r\n  await axios.post(`${URL}/update-product/${id}`,\r\n  {Images,\r\n    title,\r\n    skunumber,\r\n    description,\r\n    price,\r\n    quantity,\r\n    weaight,\r\n    category,\r\n    subcategory,\r\n    brand,\r\n    discount,\r\n    stock,\r\n    shippingdetails,\r\n    manufacturesdetails,\r\n    selectedsize},\r\n  {\r\n    headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n    }\r\n})\r\n.then(data => {\r\n  alert('updated')\r\n})\r\n.catch(error=>{\r\n  console.log(error);\r\n})\r\n}\r\nuseEffect(() => {\r\n    getAllProduct()\r\n}, [])\r\nconsole.log(product);\r\nconst openDetails = (item) =>{\r\n  setEditabale(item)\r\n  setOpen(true)\r\n}\r\nconst editabaleData = (e) =>{\r\n  const newEditiable = {...editabale}\r\n  newEditiable[e.target.name]=e.target.value;\r\n  setEditabale(newEditiable)\r\n}\r\nconst updateProductData =()=>{\r\n  console.log(editabale);\r\n  \r\n}\r\nconsole.log(title);\r\n  return (\r\n    <Layout>\r\n      \r\n      <div>\r\n        <ul>\r\n        {open \r\n        ?\r\n        <div style={{width:'100%',height:'100vh',display:'flex',justifyContent: \"center\",alignItem:'center'}}>\r\n          <div style={{width:'300px',height:'auto',border:'1px solid #3333'}}>\r\n            <input type=\"text\" placeholder='title' name='title' value={editabale.title} onChange={editabaleData}/><br /><br />\r\n            <input type=\"text\" placeholder='skunumber' name='skunumber' value={editabale.skunumber} onChange={editabaleData}/><br /><br />\r\n            <input type=\"text\" placeholder='description' name='description' value={editabale.description} onChange={editabaleData}/><br /><br />\r\n            <button onClick={updateProductData}>update</button><br /><br />\r\n            <button onClick={()=>setOpen(false)}>X</button>\r\n          </div>\r\n        </div>\r\n        :\r\n        <>\r\n        {\r\n          product.map((item, index)=>{\r\n            return(\r\n              <li key={index} style={{display:'grid',gridTemplateColumns:'3fr 1fr 2fr'}}>\r\n                <div style={{display:'flex',justifyContent:'space-around'}}>\r\n                  <img src={`${URL}/${item.Images[0]}`} alt=\"\" style={{width:'60px',height:'60px'}}/>\r\n                  <span style={{textAlign:'center'}}>{item.stock}</span>\r\n                </div>\r\n                <div>\r\n                  <span style={{textAlign:'center'}}>{item.title}</span>\r\n                  <span style={{textAlign:'center'}}>{item.price}</span>\r\n                </div>\r\n                <div style={{display:'flex',justifyContent:'space-between'}}>\r\n                  <button onClick={()=>openDetails(item)} style={{width:'50px',height:'50px'}}>+</button>\r\n                  <button onClick={()=>deleteProduct(item._id)} style={{width:'50px',height:'50px'}}>-</button>\r\n                </div>\r\n              </li>\r\n            )\r\n          })\r\n        }\r\n        </>\r\n      }\r\n        </ul>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ProductManage;","F:\\e-com-new-project-main\\client\\src\\Component\\Admin\\Page\\OrderManage.js",[],"F:\\e-com-new-project-main\\client\\src\\Component\\Admin\\Layout.js",[],"F:\\e-com-new-project-main\\client\\src\\Component\\Admin\\Page\\UserManage.js",[],{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","severity":1,"message":"220","line":2,"column":33,"nodeType":"221","messageId":"222","endLine":2,"endColumn":39},{"ruleId":"219","severity":1,"message":"220","line":3,"column":33,"nodeType":"221","messageId":"222","endLine":3,"endColumn":39},{"ruleId":"223","severity":1,"message":"224","line":98,"column":13,"nodeType":"225","endLine":98,"endColumn":52},{"ruleId":"219","severity":1,"message":"220","line":3,"column":33,"nodeType":"221","messageId":"222","endLine":3,"endColumn":39},{"ruleId":"219","severity":1,"message":"226","line":3,"column":48,"nodeType":"221","messageId":"222","endLine":3,"endColumn":52},{"ruleId":"219","severity":1,"message":"227","line":11,"column":8,"nodeType":"221","messageId":"222","endLine":11,"endColumn":14},{"ruleId":"219","severity":1,"message":"228","line":4,"column":8,"nodeType":"221","messageId":"222","endLine":4,"endColumn":16},{"ruleId":"219","severity":1,"message":"229","line":6,"column":15,"nodeType":"221","messageId":"222","endLine":6,"endColumn":18},{"ruleId":"230","severity":1,"message":"231","line":65,"column":30,"nodeType":"232","messageId":"233","endLine":65,"endColumn":32},{"ruleId":"230","severity":1,"message":"234","line":375,"column":51,"nodeType":"232","messageId":"235","endLine":375,"endColumn":53},{"ruleId":"236","severity":1,"message":"237","line":376,"column":31,"nodeType":"238","messageId":"239","endLine":376,"endColumn":33},{"ruleId":"230","severity":1,"message":"234","line":403,"column":51,"nodeType":"232","messageId":"235","endLine":403,"endColumn":53},{"ruleId":"236","severity":1,"message":"237","line":404,"column":31,"nodeType":"238","messageId":"239","endLine":404,"endColumn":33},{"ruleId":"230","severity":1,"message":"234","line":428,"column":45,"nodeType":"232","messageId":"235","endLine":428,"endColumn":47},{"ruleId":"230","severity":1,"message":"234","line":474,"column":45,"nodeType":"232","messageId":"235","endLine":474,"endColumn":47},{"ruleId":"230","severity":1,"message":"234","line":522,"column":53,"nodeType":"232","messageId":"235","endLine":522,"endColumn":55},{"ruleId":"230","severity":1,"message":"234","line":532,"column":60,"nodeType":"232","messageId":"235","endLine":532,"endColumn":62},{"ruleId":"219","severity":1,"message":"240","line":3,"column":8,"nodeType":"221","messageId":"222","endLine":3,"endColumn":26},{"ruleId":"230","severity":1,"message":"234","line":35,"column":39,"nodeType":"232","messageId":"235","endLine":35,"endColumn":41},{"ruleId":"230","severity":1,"message":"234","line":44,"column":39,"nodeType":"232","messageId":"235","endLine":44,"endColumn":41},{"ruleId":"230","severity":1,"message":"234","line":53,"column":39,"nodeType":"232","messageId":"235","endLine":53,"endColumn":41},{"ruleId":"219","severity":1,"message":"241","line":5,"column":10,"nodeType":"221","messageId":"222","endLine":5,"endColumn":14},{"ruleId":"219","severity":1,"message":"242","line":5,"column":17,"nodeType":"221","messageId":"222","endLine":5,"endColumn":24},{"ruleId":"219","severity":1,"message":"226","line":3,"column":10,"nodeType":"221","messageId":"222","endLine":3,"endColumn":14},{"ruleId":"219","severity":1,"message":"243","line":7,"column":19,"nodeType":"221","messageId":"222","endLine":7,"endColumn":29},{"ruleId":"219","severity":1,"message":"244","line":22,"column":10,"nodeType":"221","messageId":"222","endLine":22,"endColumn":17},{"ruleId":"219","severity":1,"message":"245","line":22,"column":19,"nodeType":"221","messageId":"222","endLine":22,"endColumn":29},{"ruleId":"219","severity":1,"message":"246","line":23,"column":10,"nodeType":"221","messageId":"222","endLine":23,"endColumn":19},{"ruleId":"219","severity":1,"message":"247","line":23,"column":21,"nodeType":"221","messageId":"222","endLine":23,"endColumn":33},{"ruleId":"219","severity":1,"message":"248","line":24,"column":10,"nodeType":"221","messageId":"222","endLine":24,"endColumn":15},{"ruleId":"219","severity":1,"message":"249","line":24,"column":17,"nodeType":"221","messageId":"222","endLine":24,"endColumn":25},{"ruleId":"219","severity":1,"message":"250","line":25,"column":10,"nodeType":"221","messageId":"222","endLine":25,"endColumn":24},{"ruleId":"219","severity":1,"message":"251","line":25,"column":26,"nodeType":"221","messageId":"222","endLine":25,"endColumn":43},{"ruleId":"219","severity":1,"message":"252","line":26,"column":10,"nodeType":"221","messageId":"222","endLine":26,"endColumn":21},{"ruleId":"219","severity":1,"message":"253","line":26,"column":23,"nodeType":"221","messageId":"222","endLine":26,"endColumn":37},{"ruleId":"219","severity":1,"message":"254","line":27,"column":10,"nodeType":"221","messageId":"222","endLine":27,"endColumn":23},{"ruleId":"219","severity":1,"message":"255","line":27,"column":25,"nodeType":"221","messageId":"222","endLine":27,"endColumn":41},{"ruleId":"230","severity":1,"message":"231","line":70,"column":19,"nodeType":"232","messageId":"233","endLine":70,"endColumn":21},{"ruleId":"230","severity":1,"message":"231","line":71,"column":23,"nodeType":"232","messageId":"233","endLine":71,"endColumn":25},{"ruleId":"256","severity":1,"message":"257","line":89,"column":6,"nodeType":"258","endLine":89,"endColumn":21,"suggestions":"259"},{"ruleId":"219","severity":1,"message":"245","line":12,"column":20,"nodeType":"221","messageId":"222","endLine":12,"endColumn":30},{"ruleId":"219","severity":1,"message":"247","line":13,"column":22,"nodeType":"221","messageId":"222","endLine":13,"endColumn":34},{"ruleId":"219","severity":1,"message":"260","line":14,"column":21,"nodeType":"221","messageId":"222","endLine":14,"endColumn":32},{"ruleId":"219","severity":1,"message":"249","line":15,"column":18,"nodeType":"221","messageId":"222","endLine":15,"endColumn":26},{"ruleId":"219","severity":1,"message":"251","line":16,"column":27,"nodeType":"221","messageId":"222","endLine":16,"endColumn":44},{"ruleId":"219","severity":1,"message":"253","line":17,"column":24,"nodeType":"221","messageId":"222","endLine":17,"endColumn":38},{"ruleId":"219","severity":1,"message":"254","line":18,"column":10,"nodeType":"221","messageId":"222","endLine":18,"endColumn":23},{"ruleId":"219","severity":1,"message":"255","line":18,"column":26,"nodeType":"221","messageId":"222","endLine":18,"endColumn":42},{"ruleId":"219","severity":1,"message":"261","line":1,"column":17,"nodeType":"221","messageId":"222","endLine":1,"endColumn":26},{"ruleId":"219","severity":1,"message":"262","line":3,"column":8,"nodeType":"221","messageId":"222","endLine":3,"endColumn":15},{"ruleId":"219","severity":1,"message":"263","line":5,"column":8,"nodeType":"221","messageId":"222","endLine":5,"endColumn":12},{"ruleId":"219","severity":1,"message":"264","line":8,"column":10,"nodeType":"221","messageId":"222","endLine":8,"endColumn":13},{"ruleId":"256","severity":1,"message":"265","line":44,"column":8,"nodeType":"258","endLine":44,"endColumn":10,"suggestions":"266"},{"ruleId":"256","severity":1,"message":"267","line":48,"column":8,"nodeType":"258","endLine":48,"endColumn":14,"suggestions":"268"},{"ruleId":"219","severity":1,"message":"269","line":9,"column":11,"nodeType":"221","messageId":"222","endLine":9,"endColumn":19},{"ruleId":"230","severity":1,"message":"234","line":67,"column":61,"nodeType":"232","messageId":"235","endLine":67,"endColumn":63},{"ruleId":"219","severity":1,"message":"226","line":3,"column":9,"nodeType":"221","messageId":"222","endLine":3,"endColumn":13},{"ruleId":"219","severity":1,"message":"263","line":4,"column":8,"nodeType":"221","messageId":"222","endLine":4,"endColumn":12},{"ruleId":"215","replacedBy":"270"},{"ruleId":"217","replacedBy":"271"},{"ruleId":"230","severity":1,"message":"272","line":30,"column":24,"nodeType":"232","messageId":"233","endLine":30,"endColumn":26},{"ruleId":"219","severity":1,"message":"273","line":12,"column":19,"nodeType":"221","messageId":"222","endLine":12,"endColumn":28},{"ruleId":"219","severity":1,"message":"274","line":13,"column":18,"nodeType":"221","messageId":"222","endLine":13,"endColumn":26},{"ruleId":"219","severity":1,"message":"275","line":14,"column":22,"nodeType":"221","messageId":"222","endLine":14,"endColumn":34},{"ruleId":"219","severity":1,"message":"276","line":15,"column":22,"nodeType":"221","messageId":"222","endLine":15,"endColumn":36},{"ruleId":"219","severity":1,"message":"277","line":16,"column":16,"nodeType":"221","messageId":"222","endLine":16,"endColumn":24},{"ruleId":"219","severity":1,"message":"278","line":17,"column":19,"nodeType":"221","messageId":"222","endLine":17,"endColumn":30},{"ruleId":"219","severity":1,"message":"279","line":18,"column":18,"nodeType":"221","messageId":"222","endLine":18,"endColumn":28},{"ruleId":"219","severity":1,"message":"280","line":19,"column":19,"nodeType":"221","messageId":"222","endLine":19,"endColumn":30},{"ruleId":"219","severity":1,"message":"281","line":20,"column":22,"nodeType":"221","messageId":"222","endLine":20,"endColumn":36},{"ruleId":"219","severity":1,"message":"282","line":21,"column":16,"nodeType":"221","messageId":"222","endLine":21,"endColumn":24},{"ruleId":"219","severity":1,"message":"283","line":22,"column":19,"nodeType":"221","messageId":"222","endLine":22,"endColumn":30},{"ruleId":"219","severity":1,"message":"284","line":23,"column":16,"nodeType":"221","messageId":"222","endLine":23,"endColumn":24},{"ruleId":"219","severity":1,"message":"285","line":24,"column":26,"nodeType":"221","messageId":"222","endLine":24,"endColumn":44},{"ruleId":"219","severity":1,"message":"286","line":25,"column":30,"nodeType":"221","messageId":"222","endLine":25,"endColumn":52},{"ruleId":"219","severity":1,"message":"287","line":26,"column":23,"nodeType":"221","messageId":"222","endLine":26,"endColumn":38},{"ruleId":"219","severity":1,"message":"288","line":62,"column":7,"nodeType":"221","messageId":"222","endLine":62,"endColumn":20},"no-native-reassign",["289"],"no-negated-in-lhs",["290"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Link' is defined but never used.","'Header' is defined but never used.","'Dropzone' is defined but never used.","'sub' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ProductDetailsPage' is defined but never used.","'list' is assigned a value but never used.","'setList' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'orderid' is assigned a value but never used.","'setOrderid' is assigned a value but never used.","'paymentid' is assigned a value but never used.","'setPaymentid' is assigned a value but never used.","'total' is assigned a value but never used.","'setTotal' is assigned a value but never used.","'dateofpurcashe' is assigned a value but never used.","'setDateofpurcashe' is assigned a value but never used.","'orderstatus' is assigned a value but never used.","'setOrderstatus' is assigned a value but never used.","'paymentmethod' is assigned a value but never used.","'setPaymentmethod' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'makePd'. Either include it or remove the dependency array.","ArrayExpression",["291"],"'setProducts' is assigned a value but never used.","'Component' is defined but never used.","'Product' is defined but never used.","'man1' is defined but never used.","'set' is defined but never used.","React Hook useEffect has missing dependencies: 'getAllProduct', 'limit', and 'skip'. Either include them or remove the dependency array.",["292"],"React Hook useEffect has missing dependencies: 'getAllProduct' and 'limit'. Either include them or remove the dependency array.",["293"],"'priceBox' is assigned a value but never used.",["289"],["290"],"Array.prototype.filter() expects a return value from arrow function.","'setImages' is assigned a value but never used.","'setTitle' is assigned a value but never used.","'setSkunumber' is assigned a value but never used.","'setDescription' is assigned a value but never used.","'setPrice' is assigned a value but never used.","'setQuantity' is assigned a value but never used.","'setWeaight' is assigned a value but never used.","'setCategory' is assigned a value but never used.","'setSubcategory' is assigned a value but never used.","'setBrand' is assigned a value but never used.","'setDiscount' is assigned a value but never used.","'setStock' is assigned a value but never used.","'setShippingdetails' is assigned a value but never used.","'setManufacturesdetails' is assigned a value but never used.","'setSelectedsize' is assigned a value but never used.","'updateProduct' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"296","fix":"298"},"Update the dependencies array to be: [cart, loading, makePd]",{"range":"299","text":"300"},"Update the dependencies array to be: [getAllProduct, limit, skip]",{"range":"301","text":"302"},{"range":"303","text":"302"},[2415,2430],"[cart, loading, makePd]",[1598,1600],"[getAllProduct, limit, skip]",[1706,1712]]
[{"E:\\projects\\web-dev\\client\\src\\index.js":"1","E:\\projects\\web-dev\\client\\src\\reportWebVitals.js":"2","E:\\projects\\web-dev\\client\\src\\App.js":"3","E:\\projects\\web-dev\\client\\src\\Component\\User\\Adminlogin.js":"4","E:\\projects\\web-dev\\client\\src\\Component\\User\\Url.js":"5","E:\\projects\\web-dev\\client\\src\\Component\\User\\User.js":"6","E:\\projects\\web-dev\\client\\src\\Component\\Admin\\Admin.js":"7","E:\\projects\\web-dev\\client\\src\\Component\\User\\Home.js":"8","E:\\projects\\web-dev\\client\\src\\Component\\User\\Userregister.js":"9","E:\\projects\\web-dev\\client\\src\\Component\\User\\Userlogin.js":"10","E:\\projects\\web-dev\\client\\src\\Component\\User\\ProductDetailsPage.js":"11","E:\\projects\\web-dev\\client\\src\\Component\\User\\Header.js":"12","E:\\projects\\web-dev\\client\\src\\Component\\Admin\\Uploadproduct.js":"13","E:\\projects\\web-dev\\client\\src\\Component\\Admin\\Menumanage.js":"14","E:\\projects\\web-dev\\client\\src\\Component\\User\\WishlistPage\\WishlistPage.js":"15","E:\\projects\\web-dev\\client\\src\\Component\\User\\Pages\\CheckoutPage.js":"16","E:\\projects\\web-dev\\client\\src\\Component\\User\\Pages\\InvoicePage.js":"17","E:\\projects\\web-dev\\client\\src\\Component\\User\\CartPage.js\\CartPage.js":"18","E:\\projects\\web-dev\\client\\src\\Component\\User\\Pages\\OrderPage.js":"19","E:\\projects\\web-dev\\client\\src\\Component\\Admin\\Page\\UserManage.js":"20","E:\\projects\\web-dev\\client\\src\\Component\\Admin\\Page\\OrderManage.js":"21","E:\\projects\\web-dev\\client\\src\\Component\\Admin\\Page\\ProductManage.js":"22","E:\\projects\\web-dev\\client\\src\\Component\\User\\TopHeading.js":"23","E:\\projects\\web-dev\\client\\src\\Component\\User\\ProductShow.js":"24","E:\\projects\\web-dev\\client\\src\\Component\\User\\ShowCase.js":"25","E:\\projects\\web-dev\\client\\src\\Component\\Admin\\Layout.js":"26","E:\\projects\\web-dev\\client\\src\\Component\\User\\Pages\\InvoiceLayout.js":"27","E:\\projects\\web-dev\\client\\src\\Component\\User\\Product.js":"28","E:\\projects\\web-dev\\client\\src\\Component\\User\\MainSlider.js":"29"},{"size":521,"mtime":1617685238211,"results":"30","hashOfConfig":"31"},{"size":375,"mtime":1617685238212,"results":"32","hashOfConfig":"31"},{"size":943,"mtime":1619062494885,"results":"33","hashOfConfig":"31"},{"size":3045,"mtime":1617685238195,"results":"34","hashOfConfig":"31"},{"size":61,"mtime":1617685238202,"results":"35","hashOfConfig":"31"},{"size":7308,"mtime":1619062494904,"results":"36","hashOfConfig":"31"},{"size":1205,"mtime":1619062494886,"results":"37","hashOfConfig":"31"},{"size":589,"mtime":1618323462905,"results":"38","hashOfConfig":"31"},{"size":7637,"mtime":1617685238203,"results":"39","hashOfConfig":"31"},{"size":2937,"mtime":1617685238203,"results":"40","hashOfConfig":"31"},{"size":4135,"mtime":1619065712719,"results":"41","hashOfConfig":"31"},{"size":2670,"mtime":1619062494895,"results":"42","hashOfConfig":"31"},{"size":18405,"mtime":1619062494893,"results":"43","hashOfConfig":"31"},{"size":17324,"mtime":1619062494889,"results":"44","hashOfConfig":"31"},{"size":2178,"mtime":1618323462913,"results":"45","hashOfConfig":"31"},{"size":4769,"mtime":1618323982864,"results":"46","hashOfConfig":"31"},{"size":651,"mtime":1619062494897,"results":"47","hashOfConfig":"31"},{"size":5208,"mtime":1619062494894,"results":"48","hashOfConfig":"31"},{"size":3887,"mtime":1619062494899,"results":"49","hashOfConfig":"31"},{"size":1508,"mtime":1619062494892,"results":"50","hashOfConfig":"31"},{"size":3514,"mtime":1619063989167,"results":"51","hashOfConfig":"31"},{"size":4474,"mtime":1619062494892,"results":"52","hashOfConfig":"31"},{"size":241,"mtime":1617685238202,"results":"53","hashOfConfig":"31"},{"size":3994,"mtime":1619062494902,"results":"54","hashOfConfig":"31"},{"size":3742,"mtime":1619062494903,"results":"55","hashOfConfig":"31"},{"size":1243,"mtime":1619062494886,"results":"56","hashOfConfig":"31"},{"size":588,"mtime":1619062494897,"results":"57","hashOfConfig":"31"},{"size":271,"mtime":1617685238199,"results":"58","hashOfConfig":"31"},{"size":2635,"mtime":1617685238197,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1becxnp",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"62"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"E:\\projects\\web-dev\\client\\src\\index.js",[],["134","135"],"E:\\projects\\web-dev\\client\\src\\reportWebVitals.js",[],"E:\\projects\\web-dev\\client\\src\\App.js",["136"],"import React, { Component } from \"react\";\r\nimport { Switch, BrowserRouter, Router, Route } from \"react-router-dom\";\r\nimport Admin from \"./Component/Admin/Admin\";\r\nimport User from \"./Component/User/User\";\r\nimport Adminlogin from \"./Component/User/Adminlogin\";\r\nimport axios from \"axios\";\r\nimport URL from \"./Component/User/Url\";\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      menus: []\r\n    }\r\n  }\r\n  getmenus = () => {\r\n    axios.get(`${URL}/getmenus`).then((data) => {\r\n      this.setState({menus:data.data})\r\n    })\r\n  };\r\n  componentDidMount() {\r\n    this.getmenus()\r\n  }\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path=\"/admindashboard\" component={Admin} />\r\n          <Route path=\"/admin\" component={Adminlogin} />\r\n          <Route path=\"/\" component={User} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n","E:\\projects\\web-dev\\client\\src\\Component\\User\\Adminlogin.js",["137"],"import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport \"./adminlogincss.css\";\r\nimport URL from \"./Url\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nclass Adminlogin extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      mesg: \"\",\r\n      redirect: false,\r\n    };\r\n  }\r\n\r\n  onchange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  notify = () => toast.error(this.state.mesg);\r\n  formsubmit = async (e) => {\r\n    const { username, password } = this.state;\r\n    e.preventDefault();\r\n    await axios\r\n      .post(\r\n        `${URL}/login-admin`,\r\n        { username, password },\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Cotent-Type\": \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((data) => {\r\n        console.log(data.data);\r\n        localStorage.setItem(\"auth\", data.data.token);\r\n        localStorage.setItem(\"userrole\", data.data.role);\r\n        localStorage.setItem(\"username\", data.data.username);\r\n        this.props.history.push(\"/admindashboard\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        // this.setState({ mesg: err.response.data.messege.msg });\r\n        // this.notify();\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper fadeInDown\">\r\n        <div id=\"formContent\">\r\n          {/* Tabs Titles */}\r\n          {/* Icon */}\r\n          <div className=\"fadeIn first\"></div>\r\n          {/* Login Form */}\r\n          <form onSubmit={this.formsubmit}>\r\n            <input\r\n              type=\"text\"\r\n              id=\"login\"\r\n              name=\"username\"\r\n              value={this.state.username}\r\n              onChange={this.onchange}\r\n              className=\"fadeIn second\"\r\n              placeholder=\"Username\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              value={this.state.password}\r\n              onChange={this.onchange}\r\n              className=\"fadeIn third\"\r\n              placeholder=\"password\"\r\n            />\r\n            <input\r\n              type=\"submit\"\r\n              className=\"fadeIn fourth\"\r\n              defaultValue=\"Log In\"\r\n            />\r\n          </form>\r\n          <ToastContainer\r\n            position=\"top-right\"\r\n            autoClose={5000}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n          />\r\n\r\n          <ToastContainer />\r\n          {/* Remind Passowrd */}\r\n          <div id=\"formFooter\">\r\n            <a className=\"underlineHover\" href=\"#\">\r\n              Forgot Password?\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Adminlogin);\r\n","E:\\projects\\web-dev\\client\\src\\Component\\User\\Url.js",[],"E:\\projects\\web-dev\\client\\src\\Component\\User\\User.js",["138","139","140"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Switch, BrowserRouter, Router, Route, Link } from \"react-router-dom\";\r\nimport Home from './Home';\r\nimport ProductDetailsPage from './ProductDetailsPage';\r\nimport URL from './Url';\r\nimport './user.css';\r\nimport Userlogin from \"./Userlogin\";\r\nimport Userregister from \"./Userregister\";\r\nimport CartPage from \"./CartPage.js/CartPage\";\r\nimport Header from '../User/Header';\r\nimport CheckoutPage from './Pages/CheckoutPage';\r\nimport WishlistPage from './WishlistPage/WishlistPage';\r\nimport OrderPage from './Pages/OrderPage';\r\nimport InvoicePage from './Pages/InvoicePage';\r\nconst User = () => {\r\n  const [cart, setCart] = useState([])\r\n  const [cartLength, setCartLength] = useState([])\r\n  const [wishlist, setWishlist] = useState([]);\r\n  const [wishlistLength, setWishlistLength] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const saveToCart = async (item, type) => {\r\n    console.log(item, 'send id');\r\n    setLoading(true)\r\n    await axios.post(`http://localhost:7000/addToCart`,\r\n      {\r\n        type: type,\r\n        product: item\r\n\r\n      },\r\n      {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Cotent-Type\": \"application/json\",\r\n          \"auth\": localStorage.getItem('auth')\r\n        },\r\n      }\r\n    )\r\n      .then(res => {\r\n        console.log(res)\r\n        setLoading(false)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        setLoading(false)\r\n      })\r\n  }\r\n  const removeCart = async (id) => {\r\n    setLoading(true)\r\n    await axios.delete(`http://localhost:7000/deleteCart/${id}`,\r\n      {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Cotent-Type\": \"application/json\",\r\n          \"auth\": localStorage.getItem('auth')\r\n        },\r\n      }\r\n    )\r\n      .then(res => {\r\n        setLoading(false)\r\n        console.log(res)\r\n      })\r\n      .catch(err => {\r\n        setLoading(false)\r\n        console.log(err)\r\n      })\r\n  }\r\n  const clearCart = () => {\r\n    setLoading(true)\r\n    axios.get(`http://localhost:7000/clearCart`,\r\n      {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Cotent-Type\": \"application/json\",\r\n          \"auth\": localStorage.getItem('auth')\r\n        },\r\n      }\r\n    )\r\n    .then(result=>{\r\n      setLoading(false)\r\n    })\r\n    .catch(error=>{\r\n      setLoading(false)\r\n    })\r\n  }\r\n  const addToWishlist = async (id) => {\r\n    setLoading(true)\r\n    await axios.post(`http://localhost:7000/addToWishlist/${id}`,\r\n      { name: 2 },\r\n      {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Cotent-Type\": \"application/json\",\r\n          \"auth\": localStorage.getItem('auth')\r\n        },\r\n      }\r\n    )\r\n      .then(data => {\r\n        setLoading(false)\r\n        console.log(data);\r\n      })\r\n      .catch(error => {\r\n        setLoading(false)\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  const getAllProduct = async () => {\r\n    await axios.get(`${URL}/get-allproducts`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      }\r\n    })\r\n      .then(data => {\r\n        setProducts(data.data.product)\r\n      }\r\n      )\r\n      .catch(error => {\r\n        console.log(error);\r\n\r\n      })\r\n  }\r\n  const getCart = () => {\r\n    axios.get(\"http://localhost:7000/getCart\",\r\n      {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Cotent-Type\": \"application/json\",\r\n          \"auth\": localStorage.getItem('auth')\r\n        },\r\n      }\r\n    )\r\n      .then(data => {\r\n        setCart(data.data[0].cart)\r\n        setCartLength(data.data[0].cart.length)\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  }\r\n  const getWishlist = () => {\r\n    axios.get(\"http://localhost:7000/getWishlist\",\r\n      {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Cotent-Type\": \"application/json\",\r\n          \"auth\": localStorage.getItem('auth')\r\n        },\r\n      }\r\n    )\r\n      .then(data => {\r\n        setWishlist(data.data[0].wishlist)\r\n        setWishlistLength(data.data[0].wishlist.length)\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  }\r\n  useEffect(() => {\r\n    getAllProduct()\r\n    getCart()\r\n    getWishlist()\r\n  }, [loading])\r\n  console.log(products);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\" render={props => <Home {...props} cartLength={cartLength} addToCart={saveToCart} wishlistLength={wishlistLength} addToWishlist={addToWishlist} />} />\r\n        <Route exact path=\"/userregister\" component={Userregister} />\r\n        <Route exact path=\"/userlogin\" component={Userlogin} />\r\n        <Route exact path=\"/productDetails-Page/:id\" component={ProductDetailsPage} />\r\n        <Route exact path=\"/cartPage\" render={props => <CartPage {...props} addToCart={saveToCart} cart={cart} deleteCart={removeCart} clearCart={clearCart} products={products} />} />\r\n        <Route exact path=\"/checkoutPage\" render={props => <CheckoutPage {...props} cart={cart} />} />\r\n        <Route exact path=\"/wishlistPage\" render={props => <WishlistPage {...props} products={products} wishlist={wishlist} addToCart={saveToCart} />} />\r\n        <Route exact path=\"/orderPage\" component={OrderPage} />\r\n        <Route exact path=\"/invoicePage\" component={InvoicePage} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default User;\r\n\r\n// import React, { Component } from \"react\";\r\n// import { Switch, BrowserRouter, Router, Route, Link } from \"react-router-dom\";\r\n// import Userlogin from \"./Userlogin\";\r\n// import Userregister from \"./Userregister\";\r\n// import './user.css'\r\n// export default class User extends Component {\r\n//   constructor() {\r\n//     super();\r\n//     this.state = {\r\n//       toggleMenuBar:false,\r\n//     }\r\n//   }\r\n//   render() {\r\n//     return (\r\n//       <BrowserRouter>\r\n//         <div className=\"row\" style={{ justifyContent: \"center\" }}>\r\n//           <div className=\"header\">\r\n//             <div className=\"header-wrapper\">\r\n//               <div className=\"header-item1\">\r\n//                 <div className=\"logo\">\r\n//                   hi\r\n//                 </div>\r\n//               </div>\r\n//               <div className=\"header-item2\">\r\n//                 <li onClick={()=>this.setState(!this.toggleMenuBar)}>item1</li>\r\n//                 <li onClick={()=>this.setState(!this.toggleMenuBar)}>item2</li>\r\n//                 <li onClick={()=>this.setState(!this.toggleMenuBar)}>item3</li>\r\n//                 <li onClick={()=>this.setState(!this.toggleMenuBar)}>item4</li>\r\n//                 <li onClick={()=>this.setState(!this.toggleMenuBar)}>item5</li>\r\n//               </div>\r\n//               <div className=\"header-item3\">\r\n//                 bye\r\n//               </div>\r\n//             </div>\r\n//             {\r\n//               this.state.toggleMenuBar ? <div className=\"sub-header\"></div> : null\r\n//             }\r\n//           </div>\r\n\r\n//         </div>\r\n//         <Switch>\r\n//           <Route path=\"/userregister\" component={Userregister} />\r\n//           <Route path=\"/userlogin\" component={Userlogin} />\r\n//         </Switch>\r\n//       </BrowserRouter>\r\n//     );\r\n//   }\r\n// }\r\n","E:\\projects\\web-dev\\client\\src\\Component\\Admin\\Admin.js",["141"],"import React, { Component } from \"react\";\r\nimport Uploadproduct from \"./Uploadproduct\";\r\nimport { Switch, BrowserRouter, Router, Route } from \"react-router-dom\";\r\nimport Menumanage from \"./Menumanage\";\r\nimport ProductManage from \"./Page/ProductManage\";\r\nimport OrderManage from \"./Page/OrderManage\";\r\nimport UserManage from \"./Page/UserManage\";\r\nexport default class Admin extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/admindashboard/uploadproduct\"\r\n            component={Uploadproduct}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/admindashboard/menumange\"\r\n            component={Menumanage}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/admindashboard/productManage\"\r\n            component={ProductManage}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/admindashboard/orderManage\"\r\n            component={OrderManage}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/admindashboard/userManage\"\r\n            component={UserManage}\r\n          />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n","E:\\projects\\web-dev\\client\\src\\Component\\User\\Home.js",["142"],"import React from 'react';\r\nimport Header from './Header';\r\nimport ProductDetailsPage from './ProductDetailsPage';\r\nimport ProductShow from './ProductShow';\r\nimport ShowCase from './ShowCase';\r\nimport TopHeading from './TopHeading';\r\n\r\nconst Home = ({cartLength,addToCart,addToWishlist}) => {\r\n    return (\r\n        <>\r\n            <Header cartLength={cartLength}></Header>\r\n            <TopHeading></TopHeading>\r\n            <ShowCase></ShowCase>\r\n            <ProductShow addToCart={addToCart} addToWishlist={addToWishlist}></ProductShow>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;","E:\\projects\\web-dev\\client\\src\\Component\\User\\Userregister.js",[],"E:\\projects\\web-dev\\client\\src\\Component\\User\\Userlogin.js",[],"E:\\projects\\web-dev\\client\\src\\Component\\User\\ProductDetailsPage.js",["143","144","145","146"],"E:\\projects\\web-dev\\client\\src\\Component\\User\\Header.js",["147","148","149"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport URL from './Url';\r\n\r\nconst Header = (props) => {\r\n  const [toggleMenuBar, setToggleMenuBar] = useState(false);\r\n  const [menus, setMenus] = useState([]);\r\n  const [subMenus, setSubMenus] = useState([]);\r\n  const handelOnClick = (sub) => {\r\n    setToggleMenuBar(!toggleMenuBar)\r\n    setSubMenus(sub)\r\n  }\r\n  const getmenus = () => {\r\n    axios.get(`${URL}/getmenus`).then((data) => {\r\n      setMenus(data.data)\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    getmenus()\r\n  }, [])\r\n  console.log(props.cartLength);\r\n  \r\n  return (\r\n    <div className=\"row\" style={{ justifyContent: \"center\" }}>\r\n      <div className=\"header\">\r\n        <div className=\"header-wrapper\">\r\n          <div className=\"header-item1\">\r\n            <div className=\"logo\">\r\n              <Link to=\"/\"><span>BuyForest</span></Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"header-item2\">\r\n            {\r\n              menus.map((item, index) => {\r\n                if (item.Type === \"simplemenu\") {\r\n                  return (\r\n                    <li key={index}>{item.CategoryName}</li>\r\n                  )\r\n                }\r\n              })\r\n            }\r\n            {\r\n              menus.map((item, index) => {\r\n                if (item.Type === \"dropdownmenuholder\") {\r\n                  return (\r\n                    <li key={index}>{item.CategoryName}</li>\r\n                  )\r\n                }\r\n              })\r\n            }\r\n            {\r\n              menus.map((item, index) => {\r\n                if (item.Type === \"megamenuholder\") {\r\n                  return (\r\n\r\n                    <li\r\n                      key={index}\r\n                      onClick={() => handelOnClick(item.SubCategory)}\r\n                    >{item.CategoryName}</li>\r\n\r\n\r\n                  )\r\n                }\r\n              })\r\n            }\r\n          </div>\r\n          <div className=\"header-item3\" style={{'display':'flex','justifyContent':'space-around'}}>\r\n            <Link to=\"/cartPage\"><span className=\"cart\"><sup>{props.cartLength}</sup>cart</span></Link><br />\r\n            <Link to=\"/wishlistPage\"><span className=\"cart\"><sup>{props.wishlistLength}</sup>wish</span></Link>\r\n            \r\n          </div>\r\n        </div>\r\n        {\r\n          toggleMenuBar ? <div className=\"sub-header\">\r\n            {\r\n              subMenus.map((item, index) => {\r\n                return (<li key={index}>{item.Name}</li>)\r\n              })\r\n            }\r\n          </div> : null\r\n        }\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","E:\\projects\\web-dev\\client\\src\\Component\\Admin\\Uploadproduct.js",["150","151","152"],"import React, { Component } from \"react\";\r\nimport CKEditor from \"react-ckeditor-component\";\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport axios from \"axios\";\r\nimport URL, { sub } from \"../User/Url\";\r\nimport Layout from \"./Layout\";\r\nexport default class Uploadproduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      options: [],\r\n      sub: [],\r\n      data: [],\r\n      brands: [{ name: \"Apple\" }, { name: \"Iphone\" }, { name: \"Shaomi\" }],\r\n      Images: [],\r\n      title: \"\",\r\n      skunumber: \"\",\r\n      description: \"\",\r\n      price: \"\",\r\n      quantity: \"\",\r\n      weaight: \"\",\r\n      category: \"\",\r\n      subcategory: \"\",\r\n      brand: \"\",\r\n      discount: \"\",\r\n      stock: \"\",\r\n      shippingdetails: \"\",\r\n      manufacturesdetails: \"\",\r\n      selectedsize: [],\r\n      feature: false,\r\n      trend: false,\r\n      available: [{ name: \"L\" }, { name: \"X\" }, { name: \"M\" }],\r\n      image: \"\",\r\n    };\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // onDrop = (files) => {\r\n  //   console.log(files[0]);\r\n\r\n  //   let formData = new FormData();\r\n  //   const config = {\r\n  //     header: { \"content-type\": \"multipart/form-data\" },\r\n  //   };\r\n  //   formData.append(\"file\", files[0]);\r\n  //   //save the Image we chose inside the Node Server\r\n  //   axios\r\n  //     .post(`${URL}/uploadImage`, formData, config)\r\n  //     .then((response) => {\r\n  //       if (response.data.success) {\r\n  //         this.setState({\r\n  //           Images: [...this.state.Images, response.data.image],\r\n  //         });\r\n  //       } else {\r\n  //         alert(\"Failed to save the Image in Server\");\r\n  //       }\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(\"hi\");\r\n  //       console.log(err);\r\n  //     });\r\n  // };\r\n  category = (e, t) => {\r\n    console.log(t);\r\n    this.state.data.map(item => {\r\n      if (item.CategoryName === t.name && item.SubCategory.length > 0) {\r\n        const get = item.SubCategory.map(subCat => {\r\n          return (\r\n            { name: subCat.Name }\r\n          )\r\n        })\r\n        this.setState({ sub: get, category: t.name })\r\n      }\r\n    })\r\n\r\n  }\r\n  subcategory = (e, t) => {\r\n    this.setState({ subcategory: t.name })\r\n  }\r\n\r\n\r\n  // category = (selectedList, selectedItem) => {\r\n  //   this.setState({ category: selectedItem.name })\r\n  //   {\r\n  //     this.state.data.map(item => {\r\n  //       if (item.SubCategory.length > 0 && item.CategoryName === selectedItem.name) {\r\n  //         const SubCategory = item.SubCategory.map(itemm => {\r\n  //           return ({ name: itemm.Name })\r\n  //         })\r\n\r\n  //         this.setState({ sub: SubCategory });\r\n  //       }\r\n  //     })\r\n  //   }\r\n  // }\r\n\r\n  updateContent(newContent) {\r\n    this.setState({\r\n      content: newContent,\r\n    });\r\n  }\r\n  onChangedes = (evt) => {\r\n    console.log(\"onChange fired with event info: \", evt);\r\n    var newContent = evt.editor.getData();\r\n    this.setState({\r\n      description: newContent,\r\n    });\r\n  };\r\n\r\n  onChangeship = (evt) => {\r\n    console.log(\"onChange fired with event info: \", evt);\r\n    var newContent = evt.editor.getData();\r\n    this.setState({\r\n      shippingdetails: newContent,\r\n    });\r\n  };\r\n\r\n  onChangemanu = (evt) => {\r\n    console.log(\"onChange fired with event info: \", evt);\r\n    var newContent = evt.editor.getData();\r\n    this.setState({\r\n      manufacturesdetails: newContent,\r\n    });\r\n  };\r\n\r\n  onBlur(evt) {\r\n    console.log(\"onBlur event called with event info: \", evt);\r\n  }\r\n\r\n  afterPaste(evt) {\r\n    console.log(\"afterPaste event called with event info: \", evt);\r\n  }\r\n  onDelete = (image) => {\r\n    const currentIndex = this.state.Images.indexOf(image);\r\n\r\n    let newImages = [...this.state.Images];\r\n    newImages.splice(currentIndex, 1);\r\n\r\n    this.setState({ Images: newImages });\r\n  };\r\n  async componentDidMount() {\r\n    await axios\r\n      .get(`${URL}/getmenus`, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((data) => {\r\n        this.setState({ data: data.data });\r\n        const category = data.data.map((item) => {\r\n          return { name: item.CategoryName };\r\n        });\r\n\r\n        this.setState({ options: category });\r\n      });\r\n  }\r\n\r\n  brand = (selectedList, selectedItem) => {\r\n    this.setState({ brand: selectedItem.name });\r\n  };\r\n\r\n  onSelect = (selectedList, selectedItem) => {\r\n    this.setState({ selectedsize: selectedList });\r\n  };\r\n\r\n  onChangeHandler = async (event) => {\r\n    // console.log(event.target.files[0]);\r\n    let formData = new FormData();\r\n    formData.append(\"file\", event.target.files[0]);\r\n\r\n    const config = {\r\n      header: { \"content-type\": \"multipart/form-data\" },\r\n    };\r\n\r\n    await axios\r\n      .post(`${URL}/uploadImage`, formData, config)\r\n      .then((response) => {\r\n        console.log(\"kk\", response);\r\n        if (response.data.success) {\r\n          this.setState({\r\n            Images: [...this.state.Images, response.data.image],\r\n          });\r\n        } else {\r\n          alert(\"Failed to save the Image in Server\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"hi\");\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  Change = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  trend = (e) => {\r\n    this.setState({ trend: !this.state.trend });\r\n  };\r\n  feature = () => {\r\n    this.setState({ feature: !this.state.feature });\r\n  };\r\n\r\nsubmitProductForm = async(e) => {\r\n  e.preventDefault();\r\n    const form = new FormData();\r\n    form.append(\"title\", this.state.title);\r\n    form.append(\"skunumber\", this.state.skunumber);\r\n    form.append(\"description\", this.state.description);\r\n    form.append(\"price\", this.state.price);\r\n    form.append(\"quantity\", this.state.quantity);\r\n    form.append(\"weaight\", this.state.weaight);\r\n    form.append(\"category\", this.state.category);\r\n    form.append(\"subcategory\", this.state.subcategory);\r\n    form.append(\"brand\", this.state.brand);\r\n    form.append(\"discount\", this.state.discount);\r\n    form.append(\"stock\", this.state.stock);\r\n    form.append(\"shippingdetails\", this.state.shippingdetails);\r\n    form.append(\"manufacturesdetails\", this.state.manufacturesdetails);\r\n    form.append(\"selectedsize\", this.state.selectedsize);\r\n    form.append(\"feature\", this.state.feature);\r\n    form.append(\"trend\", this.state.trend);\r\n    for (let pic of this.state.Images) {\r\n      form.append(\"Images\", pic);\r\n    }\r\n\r\n    await axios.post(`${URL}/uploadProduct`,form,{ headers: { \"Content-Type\": \"application/json\" }})\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          alert(\"Successfully uploaded\");\r\n        } else {\r\n          alert(\"Faild to upload\");\r\n        }\r\n      });\r\n  };\r\nnewImageHandler =(e)=>{\r\n  this.setState({Images:[...this.state.Images, e.target.files[0]]});\r\n}\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const {\r\n      title,\r\n      Images,\r\n      skunumber,\r\n      description,\r\n      price,\r\n      quantity,\r\n      weaight,\r\n      category,\r\n      subcategory,\r\n      brand,\r\n      discount,\r\n      stock,\r\n      shippingdetails,\r\n      manufacturesdetails,\r\n      selectedsize,\r\n      feature,\r\n      trend,\r\n    } = this.state;\r\n    axios\r\n      .post(\r\n        `${URL}/uploadProduct`,\r\n        {\r\n          title,\r\n          Images,\r\n          skunumber,\r\n          description,\r\n          price,\r\n          quantity,\r\n          weaight,\r\n          category,\r\n          subcategory,\r\n          brand,\r\n          discount,\r\n          stock,\r\n          shippingdetails,\r\n          manufacturesdetails,\r\n          selectedsize,\r\n          feature,\r\n          trend,\r\n        },\r\n        { headers: { \"Content-Type\": \"application/json\" } }\r\n      )\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          alert(\"Successfully uploaded\");\r\n        } else {\r\n          alert(\"Faild to upload\");\r\n        }\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <Layout>\r\n      <div className=\"container\">\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          {/* <Dropzone onDrop={this.onDrop} multiple={false} maxSize={800000000}>\r\n            {({ getRootProps, getInputProps }) => (\r\n              <div\r\n                style={{\r\n                  width: \"300px\",\r\n                  height: \"240px\",\r\n                  border: \"1px solid lightgray\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n                {...getRootProps()}\r\n              >\r\n                {console.log(\"getRootProps\", { ...getRootProps() })}\r\n                {console.log(\"getInputProps\", { ...getInputProps() })}\r\n                <input {...getInputProps()} />\r\n                <i className=\"fa fa-plus\" style={{ fontSize: \"3rem\" }}></i>\r\n                <Icon type=\"plus\" style={{ fontSize: \"3rem\" }} />\r\n              </div>\r\n            )}\r\n          </Dropzone> */}\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              width: \"350px\",\r\n              height: \"240px\",\r\n              overflowX: \"scroll\",\r\n            }}\r\n          >\r\n            {this.state.Images.map((image, index) => (\r\n              <div onClick={() => this.onDelete(image)}>\r\n                <img\r\n                  style={{ minWidth: \"300px\", width: \"300px\", height: \"240px\" }}\r\n                  src={`http://localhost:7000/${image}`}\r\n                  alt={`productImg-${index}`}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        {/* {this.state.Images.map((image, index) => (\r\n          <div onClick={() => this.onDelete(image)}>\r\n            <img\r\n              style={{ minWidth: \"300px\", width: \"300px\", height: \"240px\" }}\r\n              src={`/${image}`}\r\n              alt={`productImg-${index}`}\r\n            />\r\n          </div>\r\n        ))} */}\r\n\r\n        <form onSubmit={this.submitProductForm}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Select Image</label>\r\n\r\n            <input type=\"file\" name=\"Images\" onChange={this.newImageHandler} />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Title</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              onChange={this.Change}\r\n              value={this.state.title}\r\n              className=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter Title\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">SKU Number</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"skunumber\"\r\n              onChange={this.Change}\r\n              value={this.state.skunumber}\r\n              className=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter Title\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Discription</label>\r\n            <CKEditor\r\n              activeClass=\"p10\"\r\n              content={this.state.description}\r\n              value={this.state.description}\r\n              events={{\r\n                blur: this.onBlur,\r\n                afterPaste: this.afterPaste,\r\n                change: this.onChangedes,\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Price</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"price\"\r\n              onChange={this.Change}\r\n              value={this.state.price}\r\n              className=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter Price\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Quantity</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"quantity\"\r\n              onChange={this.Change}\r\n              value={this.state.quantity}\r\n              className=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter Quantity\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Weaight</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"weaight\"\r\n              onChange={this.Change}\r\n              value={this.state.weaight}\r\n              className=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter Quantity\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Select Category</label>\r\n            <Multiselect\r\n              options={this.state.options} // Options to display in the dropdown\r\n              selectedValues={this.state.selectedValue} // Preselected value to persist in dropdown\r\n              onSelect={this.category} // Function will trigger on select event\r\n              onRemove={this.onRemove} // Function will trigger on remove event\r\n              displayValue=\"name\" // Property name to display in the dropdown options\r\n              singleSelect=\"true\"\r\n            />\r\n          </div>\r\n          {this.state.sub.length > 0 && (\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"exampleInputEmail1\">Select Sub Category</label>\r\n              <Multiselect\r\n                options={this.state.sub} // Options to display in the dropdown\r\n                selectedValues={this.state.selectedValue} // Preselected value to persist in dropdown\r\n                onSelect={this.subcategory} // Function will trigger on select event\r\n                onRemove={this.onRemove} // Function will trigger on remove event\r\n                displayValue=\"name\" // Property name to display in the dropdown options\r\n                singleSelect=\"true\"\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Select Brand</label>\r\n            <Multiselect\r\n              options={this.state.brands} // Options to display in the dropdown\r\n              selectedValues={this.state.selectedValue} // Preselected value to persist in dropdown\r\n              onSelect={this.brand} // Function will trigger on select event\r\n              onRemove={this.onRemove} // Function will trigger on remove event\r\n              displayValue=\"name\" // Property name to display in the dropdown options\r\n              singleSelect=\"true\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Discount</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"discount\"\r\n              onChange={this.Change}\r\n              value={this.state.discount}\r\n              className=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter Discount\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Stock</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"stock\"\r\n              onChange={this.Change}\r\n              value={this.state.stock}\r\n              className=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter Stock\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Shipping DEtails</label>\r\n\r\n            <CKEditor\r\n              activeClass=\"p10\"\r\n              content={this.state.shippingdetails}\r\n              events={{\r\n                blur: this.onBlur,\r\n                afterPaste: this.afterPaste,\r\n                change: this.onChangeship,\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Manufactures DEtails</label>\r\n\r\n            <CKEditor\r\n              activeClass=\"p10\"\r\n              content={this.state.manufacturesdetails}\r\n              events={{\r\n                blur: this.onBlur,\r\n                afterPaste: this.afterPaste,\r\n                change: this.onChangemanu,\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"exampleInputEmail1\">Select availabel Size</label>\r\n            <Multiselect\r\n              options={this.state.available} // Options to display in the dropdown\r\n              selectedValues={this.state.selectedsize} // Preselected value to persist in dropdown\r\n              onSelect={this.onSelect} // Function will trigger on select event\r\n              onRemove={this.onRemove} // Function will trigger on remove event\r\n              displayValue=\"name\" // Property name to display in the dropdown options\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-check\">\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"featured\"\r\n              onChange={this.feature}\r\n              className=\"form-check-input\"\r\n              id=\"exampleCheck1\"\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">\r\n              Is Feature?\r\n            </label>\r\n          </div>\r\n          <div className=\"form-check\">\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"trend\"\r\n              onChange={this.trend}\r\n              className=\"form-check-input\"\r\n              id=\"exampleCheck1\"\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">\r\n              Is Trend?\r\n            </label>\r\n          </div>\r\n\r\n          <div></div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","E:\\projects\\web-dev\\client\\src\\Component\\Admin\\Menumanage.js",["153","154","155","156","157","158","159","160"],"import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport URL from \"../User/Url\";\r\nimport \"./Menutemplate.css\";\r\nimport FlatList from \"flatlist-react\";\r\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\r\nimport Modal from \"react-modal\";\r\nimport Layout from \"./Layout\";\r\n\r\nexport default class Menumanage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      simplemenu: \"\",\r\n      dropdownholder: \"\",\r\n      megamenuholder: \"\",\r\n      submegamenu: \"\",\r\n      subdropdownmenu: \"\",\r\n      selecteddropdwnholder: \"\",\r\n      selectedmegadwnholder: \"\",\r\n      topCategory:false,\r\n      modalIsOpen: false,\r\n      menus: [],\r\n      oldCategory: \"\",\r\n      editableCategory: \"\",\r\n      oldsubcategory: \"\",\r\n      editableubdrop: \"\",\r\n    };\r\n  }\r\n  alertsubmit = (id) => {\r\n    confirmAlert({\r\n      title: \"Confirm to submit\",\r\n      message: \"Are you sure to do this.\",\r\n      buttons: [\r\n        {\r\n          label: \"Yes\",\r\n          onClick: async () => {\r\n            await axios.get(`${URL}/deletecategory/${id}`).then((data) => {\r\n              console.log(data);\r\n              this.componentDidMount();\r\n            });\r\n          },\r\n        },\r\n        {\r\n          label: \"No\",\r\n        },\r\n      ],\r\n    });\r\n  };\r\n  megaMunuHolderalertsubmit = (id) => {\r\n    confirmAlert({\r\n      title: \"Confirm to submit\",\r\n      message: \"Are you sure to do this.\",\r\n      buttons: [\r\n        {\r\n          label: \"Yes\",\r\n          onClick: async () => {\r\n            await axios.get(`${URL}/deletemegaMunecategory/${id}`).then((data) => {\r\n              console.log(data);\r\n              this.componentDidMount();\r\n            });\r\n          },\r\n        },\r\n        {\r\n          label: \"No\",\r\n        },\r\n      ],\r\n    });\r\n  };\r\n  onchange = (data) => {\r\n    this.setState({ [data.target.name]: data.target.value });\r\n  };\r\n  simplemenusub = async () => {\r\n    const { simplemenu,topCategory } = this.state;\r\n    await axios\r\n      .post(\r\n        `${URL}/savemenu`,\r\n        { type: \"simplemenu\", category: simplemenu ,topCategory},\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((data) => {\r\n        alert(\"Menu aded\");\r\n        this.componentDidMount();\r\n      });\r\n  };\r\n\r\n  dropdownholdersub = async () => {\r\n    const { dropdownholder,topCategory } = this.state;\r\n    await axios\r\n      .post(\r\n        `${URL}/savemenu`,\r\n        { type: \"dropdownmenuholder\", category: dropdownholder ,topCategory},\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((data) => {\r\n        alert(\"dropdownmenu holder aded\");\r\n        this.componentDidMount();\r\n      });\r\n  };\r\n\r\n  getmenus = async () => {\r\n    await axios.get(`${URL}/getmenus`).then((data) => {\r\n      this.setState({ menus: data.data });\r\n    });\r\n  };\r\n  megamenuholdersub = async () => {\r\n    const { megamenuholder ,topCategory} = this.state;\r\n    await axios\r\n      .post(\r\n        `${URL}/savemenu`,\r\n        { type: \"megamenuholder\", category: megamenuholder ,topCategory},\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((data) => {\r\n        alert(\"Megamenu holder aded\");\r\n        this.componentDidMount();\r\n      });\r\n  };\r\n  selectdropdownholder = (e) => {\r\n    this.setState({ selecteddropdwnholder: e.target.value });\r\n  };\r\n  selectmegaholder = (e) => {\r\n    this.setState({ selectedmegadwnholder: e.target.value });\r\n  };\r\n\r\n  addsubdropdwn = async () => {\r\n    const { selecteddropdwnholder, subdropdownmenu ,topCategory} = this.state;\r\n    await axios\r\n      .post(\r\n        `${URL}/addsubdrop`,\r\n        { selecteddropdwnholder, subdropdownmenu,topCategory },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((data) => {\r\n        this.setState({ subdropdownmenu: \"\" });\r\n        this.componentDidMount();\r\n      });\r\n  };\r\n  addsubMega = async () => {\r\n    const { selectedmegadwnholder, submegamenu ,topCategory} = this.state;\r\n    await axios\r\n      .post(\r\n        `${URL}/addsubMega`,\r\n        { selectedmegadwnholder, submegamenu ,topCategory },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((data) => {\r\n        this.setState({ submegamenu: \"\" });\r\n        this.componentDidMount();\r\n      });\r\n  };\r\n  deletesubcategory = async (subcategory) => {\r\n    await axios\r\n      .post(\r\n        `${URL}/deletesubcategory`,\r\n        { subcategory },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((data) => {\r\n        if (data.data.success) this.componentDidMount();\r\n      });\r\n  };\r\n  renderPerson = (person, idx) => {\r\n    return (\r\n      <li key={idx} className=\"list-unstyled mt-2 mb-2\">\r\n        <b>{person.Name} </b>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary btn-sm\"\r\n          onClick={() => this.subcategoryedit(person.Name)}\r\n        >\r\n          <i className=\"fa fa-edit\" style={{ fontSize: \"16px\" }}></i>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary btn-sm ml-2\"\r\n          onClick={() => this.deletesubcategory(person.Name)}\r\n        >\r\n          <i className=\"fa fa-close\" style={{ fontSize: \"16px\" }}></i>\r\n        </button>\r\n      </li>\r\n    );\r\n  };\r\n  renderMegaMenu = (person, idx) => {\r\n    return (\r\n      <li key={idx} className=\"list-unstyled mt-2 mb-2\">\r\n        <b>{person.Name} </b>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary btn-sm\"\r\n          onClick={() => this.subcategoryedit(person.Name)}\r\n        >\r\n          <i className=\"fa fa-edit\" style={{ fontSize: \"16px\" }}></i>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary btn-sm ml-2\"\r\n          onClick={() => this.deletesubcategory(person.Name)}\r\n        >\r\n          <i className=\"fa fa-close\" style={{ fontSize: \"16px\" }}></i>\r\n        </button>\r\n      </li>\r\n    );\r\n  };\r\n  closeModal = () => {\r\n    this.setState({ modalIsOpen: false });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getmenus();\r\n  }\r\n  subcategoryedit = (subcategory) => {\r\n    this.setState({\r\n      oldsubcategory: subcategory,\r\n      editableubdrop: subcategory,\r\n      modalIsOpen: true,\r\n    });\r\n  };\r\n  editAble = (cat) => {\r\n    this.setState({\r\n      oldCategory: cat,\r\n      editableCategory: cat,\r\n      modalIsOpen: true,\r\n    });\r\n  };\r\n  editCategory = async () => {\r\n    const { oldCategory,editableCategory} = this.state;\r\n    await axios\r\n      .post(\r\n        `${URL}/editCategory`,\r\n        { oldCategory,editableCategory },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((data) => {\r\n        if (data.data.success) this.setState({ modalIsOpen: false });\r\n        this.componentDidMount();\r\n      });\r\n  };\r\n  editsubdropdwn = async () => {\r\n    const { oldsubcategory, editableubdrop } = this.state;\r\n    await axios\r\n      .post(\r\n        `${URL}/editsubdrop`,\r\n        { oldsubcategory, editableubdrop },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Accept: \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((data) => {\r\n        if (data.data.success) this.setState({ modalIsOpen: false });\r\n        this.componentDidMount();\r\n      });\r\n  };\r\n  topCategorySet = ()=>{\r\n    this.setState({topCategory:!this.state.topCategory})\r\n  }\r\n  render() {\r\n    return (\r\n      <Layout>\r\n      <div className=\"container-fluid\">\r\n        <Modal\r\n          isOpen={this.state.modalIsOpen}\r\n          onRequestClose={this.closeModal}\r\n          contentLabel=\"Example Modal\"\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            onChange={this.onchange}\r\n            name=\"editableubdrop\"\r\n            value={this.state.editableubdrop}\r\n            placeholder=\"enter sub dropdown menu\"\r\n          ></input>\r\n          <button type=\"button\" onClick={this.editsubdropdwn}>\r\n            Add\r\n          </button>\r\n        </Modal>\r\n        {/* <Modal\r\n          isOpen={this.state.modalIsOpen}\r\n          onRequestClose={this.closeModal}\r\n          contentLabel=\"Example Modal\"\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            onChange={this.onchange}\r\n            name=\"editableCategory\"\r\n            value={this.state.editableCategory}\r\n            placeholder=\"update category\"\r\n          ></input>\r\n          <button type=\"button\" onClick={this.editCategory}>\r\n            Add\r\n          </button>\r\n        </Modal> */}\r\n        <div className=\"form-row \">\r\n          <div className=\"form-group col-md-4\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"simplemenu\"\r\n              placeholder=\"Enter a simple menu\"\r\n              onChange={this.onchange}\r\n            ></input>\r\n            <input type=\"checkbox\" name=\"topCategory\" onChange={this.topCategorySet}/>\r\n            <button type=\"button\" onClick={this.simplemenusub}>\r\n              Add\r\n            </button>\r\n          </div>\r\n          <div className=\"form-group col-md-4\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"dropdownholder\"\r\n              placeholder=\"Enter Dropdownholder\"\r\n              onChange={this.onchange}\r\n            ></input>\r\n            <input type=\"checkbox\" name=\"topCategory\" onChange={this.topCategorySet}/>\r\n            <button type=\"button\" onClick={this.dropdownholdersub}>\r\n              Add\r\n            </button>\r\n          </div>\r\n          <div className=\"form-group col-md-4\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"megamenuholder\"\r\n              placeholder=\"Enter a Megamenuholder\"\r\n              onChange={this.onchange}\r\n            ></input>\r\n            <input type=\"checkbox\" name=\"topCategory\" onChange={this.topCategorySet}/>\r\n            <button type=\"button\" onClick={this.megamenuholdersub}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group col-md-6\">\r\n            <label>Select dropdownholder</label>\r\n            <select onChange={this.selectdropdownholder}>\r\n              <option value=\"0\"> Please select dropdownholder</option>\r\n              {this.state.menus.map((item, index) => {\r\n                if (item.Type == \"dropdownmenuholder\") {\r\n                  return (\r\n                    <option key={index} value={item.CategoryName}>\r\n                      {item.CategoryName}\r\n                    </option>\r\n                  );\r\n                }\r\n              })}\r\n            </select>\r\n            \r\n            <br></br>\r\n            <input\r\n              type=\"text\"\r\n              onChange={this.onchange}\r\n              name=\"subdropdownmenu\"\r\n              value={this.state.subdropdownmenu}\r\n              placeholder=\"enter sub dropdown menu\"\r\n            ></input>\r\n            <input type=\"checkbox\" name=\"topCategory\" onChange={this.topCategorySet}/>\r\n            <button type=\"button\" onClick={this.addsubdropdwn}>\r\n              Add\r\n            </button>\r\n          </div>\r\n          <div className=\"form-group col-md-6\">\r\n            <label>Select Megamenu Holder</label>\r\n            <select onChange={this.selectmegaholder}>\r\n              <option value=\"0\"> Please select Megaholder</option>\r\n              {this.state.menus.map((item, index) => {\r\n                if (item.Type == \"megamenuholder\") {\r\n                  return (\r\n                    <option key={index} value={item.CategoryName}>\r\n                      {item.CategoryName}\r\n                    </option>\r\n                  );\r\n                }\r\n              })}\r\n            </select>\r\n            <br></br>\r\n            <input\r\n              type=\"text\"\r\n              name=\"submegamenu\"\r\n              onChange={this.onchange}\r\n              value={this.state.submegamenu}\r\n              placeholder=\"Enter submegamenu\"\r\n            ></input>\r\n            <input type=\"checkbox\" name=\"topCategory\" onChange={this.topCategorySet}/>\r\n            <button type=\"button\" onClick={this.addsubMega}>Add</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"d-flex justify-content-center\">\r\n          <h2>All Drop Menus</h2>\r\n        </div>\r\n        {this.state.menus.map((item, index) => {\r\n          if (item.Type === \"dropdownmenuholder\") {\r\n            return (\r\n              <div key={index}>\r\n                <div className=\"d-flex justify-content-center my-4\">\r\n                  <button type=\"button\" className=\"btn btn-primary btn-lg\">\r\n                    {item.CategoryName}\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secondary btn-sm\"\r\n                    onClick={() =>\r\n                      this.editAble(item.CategoryName)\r\n                    }\r\n                  >\r\n                    <i className=\"fa fa-edit\" style={{ fontSize: \"16px\" }}></i>\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secondary btn-sm ml-2\"\r\n                    onClick={() => this.alertsubmit(item._id)}\r\n                  >\r\n                    <i className=\"fa fa-close\" style={{ fontSize: \"16px\" }}></i>\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <FlatList\r\n                    list={item.SubCategory}\r\n                    renderItem={this.renderPerson}\r\n                    renderWhenEmpty={() => (\r\n                      <div className=\"d-flex justify-content-center my-4\">\r\n                        You didn't add any sub category yet\r\n                      </div>\r\n                    )}\r\n                    display={{\r\n                      grid: true,\r\n                      minColumnWidth: \"5px\",\r\n                      gridGap: \"10px\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            );\r\n          }\r\n        })}\r\n        {this.state.menus.map((item, index) => {\r\n          if (item.Type === \"megamenuholder\") {\r\n            return (\r\n              <div key={index}>\r\n                <div className=\"d-flex justify-content-center my-4\">\r\n                  <button type=\"button\" className=\"btn btn-primary btn-lg\">\r\n                    {item.CategoryName}\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secondary btn-sm\"\r\n                    onClick={() =>\r\n                      this.editAble(item.CategoryName)\r\n                    }\r\n                  >\r\n                    <i className=\"fa fa-edit\" style={{ fontSize: \"16px\" }}></i>\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secondary btn-sm ml-2\"\r\n                    onClick={() => this.alertsubmit(item._id)}\r\n                  >\r\n                    <i className=\"fa fa-close\" style={{ fontSize: \"16px\" }}></i>\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                  <FlatList\r\n                    list={item.SubCategory}\r\n                    renderItem={this.renderMegaMenu}\r\n                    renderWhenEmpty={() => (\r\n                      <div className=\"d-flex justify-content-center my-4\">\r\n                        You didn't add any sub category yet\r\n                      </div>\r\n                    )}\r\n                    display={{\r\n                      grid: true,\r\n                      minColumnWidth: \"5px\",\r\n                      gridGap: \"10px\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n            );\r\n          }\r\n        })}\r\n        <h2>Top Categories</h2>\r\n                {\r\n                  this.state.menus.map((item, index)=>{\r\n                    if(item.topCategory){\r\n                      return(<h3 key={index}>{item.CategoryName}</h3>)\r\n                    }\r\n                  })\r\n                }\r\n                {\r\n                  this.state.menus.map((item, index)=>{\r\n                      return(\r\n                        <div key={index}>\r\n                          {item.SubCategory.map((sub,index)=>{\r\n                            if(sub.topCategory){\r\n                              return(<h3 key={index}>{sub.Name}</h3>)\r\n                            }\r\n                          })}\r\n                        </div>\r\n                        )\r\n                  })\r\n                }\r\n      </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","E:\\projects\\web-dev\\client\\src\\Component\\User\\WishlistPage\\WishlistPage.js",["161","162"],"import axios from 'axios';\r\nimport React, { useState } from 'react';\r\n\r\nconst WishlistPage = ({ products, wishlist,addToCart }) => {\r\n  const [list , setList]=useState('');\r\n  let wishproductlist = []\r\n\r\n  for(let product of products ){\r\n    for(let wishproduct of wishlist){\r\n      if( product._id === wishproduct.productId){\r\n        wishproductlist.push(product)\r\n      }\r\n    }\r\n  }\r\n  console.log(wishproductlist,'jhgklfdkj');\r\n  \r\n  const deleteWishList =async(id)=>{\r\n    await axios.delete(`http://localhost:7000/deletewishlist/${id}`,\r\n    {\r\n      headers: {\r\n          Accept: \"application/json\",\r\n          \"Cotent-Type\": \"application/json\",\r\n          \"auth\": localStorage.getItem('auth')\r\n      },\r\n    }\r\n    )\r\n    .then(result=>{\r\n      console.log(result);\r\n      \r\n    })\r\n    .catch(error=>{\r\n      console.log(error);\r\n      \r\n    })\r\n  }\r\n  const clearWIshList =async()=>{\r\n    await axios.get(\"http://localhost:7000/clearwishlist\",\r\n    {\r\n      headers: {\r\n          Accept: \"application/json\",\r\n          \"Cotent-Type\": \"application/json\",\r\n          \"auth\": localStorage.getItem('auth')\r\n      },\r\n    }\r\n    )\r\n    .then(result=>{\r\n      console.log(result);\r\n      \r\n    })\r\n    .catch(error=>{\r\n      console.log(error);\r\n      \r\n    })\r\n  }\r\n  console.log(wishproductlist);\r\n  \r\n  return (\r\n    <>\r\n      {\r\n        wishproductlist.map((item,index)=>{\r\n          return(\r\n            <div id=\"cart\">\r\n        <div className=\"img\">\r\n          <img src=\"\" alt=\"pic\" />\r\n        </div>\r\n        <div className=\"productName\">\r\n          <h2>{item.title}</h2>\r\n          <p>{item.description}</p>\r\n        </div>\r\n        <div className=\"buttons-area\">\r\n          <div className=\"taka\">\r\n            <span>{item.price}</span>\r\n          </div>\r\n          \r\n          <div className=\"delete\">\r\n            <button onClick={()=>addToCart(item._id,\"add\")}>add to cart</button><br /><br />\r\n            <button onClick={()=>deleteWishList(item._id)}>delete</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n          )\r\n        })\r\n      }\r\n      <button onClick={clearWIshList}>clear cart</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WishlistPage;","E:\\projects\\web-dev\\client\\src\\Component\\User\\Pages\\CheckoutPage.js",["163","164","165","166","167","168","169","170"],"import axios from 'axios';\r\nimport React, { useState } from 'react';\r\n// import PaypalExpressBtn from 'react-paypal-express-checkout';\r\nconst CheckoutPage = ({cart}) => {\r\n  const [name, setName] = useState('');\r\n  const [mobile, setMobile] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [thana, setThana] = useState('');\r\n  const [postal, setPostal] = useState('');\r\n  const [road, setRoad] = useState('');\r\n\r\n  const [orderid , setOrderid]=useState('');\r\n  const [paymentid , setPaymentid]=useState('');\r\n  const [products , setProducts]=useState('');\r\n  const [total , setTotal]=useState('');\r\n  const [dateofpurcashe , setDateofpurcashe]=useState('');\r\n  const [orderstatus , setOrderstatus]=useState('');\r\n  const [paymentmethod , setPaymentmethod]=useState('');\r\n\r\n  console.log(cart);\r\n      \r\n  const setOrder = async()=>{\r\n    const orderInfo = {\r\n      orderid,\r\n      paymentid,\r\n      products,\r\n      total,\r\n      dateofpurcashe,\r\n      orderstatus,\r\n      paymentmethod:'paypal',\r\n    }\r\n    await axios.post(\"http://localhost:7000/createOrder\",orderInfo,{\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Cotent-Type\": \"application/json\",\r\n        \"auth\": localStorage.getItem('auth')\r\n    },\r\n    })\r\n    .then(result=>{\r\n      console.log(result);\r\n      \r\n    })\r\n    .catch(error=>{\r\n      console.log(error);\r\n      \r\n    })\r\n  }\r\n//   const onSuccess = async(payment) => {\r\n//     const orderInfo = {\r\n//       orderid,\r\n//       paymentid:'#0',\r\n//       products,\r\n//       total:'1209',\r\n//       dateofpurcashe,\r\n//       orderstatus,\r\n//       paymentmethod:'paypal',\r\n//       name,mobile,address,thana,postal,road\r\n//     }\r\n//     function getNumber(callback) {\r\n//       var n = Math.floor(Math.random() * 1000);\r\n//       Users.findOne(\r\n//         { orderid: n },\r\n//         function (err, result) {\r\n//           if (err) callback(err);\r\n//           else if (result) return getNumber(callback);\r\n//           else callback(null, n);\r\n//         }\r\n//       );\r\n//     }\r\n\r\n//     getNumber(function (error, number) {\r\n//       const newUser = new Users({\r\n//         ...orderInfo,\r\n//         orderid: number,\r\n//         myrefused: 0,\r\n//       });\r\n//       setOrder(newUser)\r\n//     })\r\n    \r\n//     console.log(\"The payment was succeeded!\", payment);\r\n//     // You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\r\n//   }\r\n\r\n//   const onCancel = (data) => {\r\n//     // User pressed \"cancel\" or close Paypal's popup!\r\n//     console.log('The payment was cancelled!', data);\r\n//     // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\r\n// }\r\n\r\n//   const onError = (err) => {\r\n//     // The main Paypal's script cannot be loaded or somethings block the loading of that script!\r\n//     console.log(\"Error!\", err);\r\n//     // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\r\n//     // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\r\n//   }\r\n\r\n//   let env = 'sandbox'; // you can set here to 'production' for production\r\n//   let currency = 'USD'; // or you can set this value from your props or state\r\n//   // let total = 1; // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\r\n//   // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\r\n\r\n//   const client = {\r\n//     sandbox: 'AfRPtsoxbVeHQfNEWVnXnkPYYSFe1FWY_9JTIRCoY3Vj-NBeosHQ81-YSXMSgPMV6xhNnlx4SSg4NLAd',\r\n//     production: 'YOUR-PRODUCTION-APP-ID',\r\n//   }\r\n  return (\r\n    <div>\r\n        <input type=\"text\" value={name} placeholder=\"name\" onChange={(e) => setName(e.target.value)} /><br /><br />\r\n        <input type=\"text\" value={mobile} placeholder=\"mobile\" onChange={(e) => setMobile(e.target.value)} /><br /><br />\r\n        <input type=\"text\" value={address} placeholder=\"address\" onChange={(e) => setAddress(e.target.value)} /><br /><br />\r\n        <input type=\"text\" value={thana} placeholder=\"thana\" onChange={(e) => setThana(e.target.value)} /><br /><br />\r\n        <input type=\"text\" value={postal} placeholder=\"postal\" onChange={(e) => setPostal(e.target.value)} /><br /><br />\r\n        <input type=\"text\" value={road} placeholder=\"road\" onChange={(e) => setRoad(e.target.value)} /><br /><br />\r\n        {/* <PaypalExpressBtn env={env} client={client} currency={currency} total={total} onError={onError} onSuccess={onSuccess} onCancel={onCancel} /> */}\r\n        <button onClick={setOrder}>paypal</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckoutPage;","E:\\projects\\web-dev\\client\\src\\Component\\User\\Pages\\InvoicePage.js",[],"E:\\projects\\web-dev\\client\\src\\Component\\User\\CartPage.js\\CartPage.js",["171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport './cart.css'\r\nconst CartPage = ({ cart, addToCart, deleteCart, clearCart, products }) => {\r\n  const [product, setProduct] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [totalPrice, setTotalPrice] = useState();\r\n  const [totalVat, setTotalVat] = useState();\r\n\r\n\r\n\r\n\r\n\r\n  const [name, setName] = useState('');\r\n  const [mobile, setMobile] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [thana, setThana] = useState('');\r\n  const [postal, setPostal] = useState('');\r\n  const [road, setRoad] = useState('');\r\n\r\n  const [orderid, setOrderid] = useState('');\r\n  const [paymentid, setPaymentid] = useState('');\r\n  const [total, setTotal] = useState('');\r\n  const [dateofpurcashe, setDateofpurcashe] = useState('');\r\n  const [orderstatus, setOrderstatus] = useState('');\r\n  const [paymentmethod, setPaymentmethod] = useState('');\r\n  const [checkout, setCheckout] = useState(false);\r\n\r\n\r\n  const setOrder = async () => {\r\n    const orderInfo = {\r\n      orderid:Math.floor((Math.random() * 100) + 1),\r\n      paymentid:'1232344',\r\n      address:{\r\n        name,\r\n        thana,\r\n        mobile,\r\n        address,\r\n        postal,\r\n        road\r\n      },\r\n      products:product,\r\n      total:totalPrice+totalVat,\r\n      dateofpurcashe:Date.now(),\r\n      orderstatus:'pending',\r\n      paymentmethod: 'paypal',\r\n    }\r\n    await axios.post(\"http://localhost:7000/createOrder\", orderInfo, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Cotent-Type\": \"application/json\",\r\n        \"auth\": localStorage.getItem('auth')\r\n      },\r\n    })\r\n      .then(result => {\r\n        console.log(result);\r\n\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n\r\n      })\r\n  }\r\n  \r\n  const makePd = () => {\r\n    const items = [];\r\n    let total = 0;\r\n    let vat = 0;\r\n    cart.map(item => {\r\n      products.map(pd => {\r\n        console.log(pd, 'pdpdppdpdp');\r\n        if (pd._id === item.productId) {\r\n          items.push({ ...pd, item })\r\n          total = total + pd.price * item.quantity;\r\n          vat = vat + (pd.price * item.quantity) * 15 / 100;\r\n          setTotalPrice(total)\r\n          setTotalVat(vat)\r\n        }\r\n      }\r\n      )\r\n    }\r\n    )\r\n    setProduct(items)\r\n  }\r\n\r\n  useEffect(() => {\r\n    makePd()\r\n  }, [cart, loading])\r\n  console.log(product);\r\n  console.log(totalPrice);\r\n\r\n  return (\r\n    <>\r\n      {\r\n        checkout ?\r\n        <>\r\n          <button onClick={() => setCheckout(false)}>go back</button>\r\n          <div>\r\n            <input type=\"text\" value={name} placeholder=\"name\" onChange={(e) => setName(e.target.value)} /><br /><br />\r\n            <input type=\"text\" value={mobile} placeholder=\"mobile\" onChange={(e) => setMobile(e.target.value)} /><br /><br />\r\n            <input type=\"text\" value={address} placeholder=\"address\" onChange={(e) => setAddress(e.target.value)} /><br /><br />\r\n            <input type=\"text\" value={thana} placeholder=\"thana\" onChange={(e) => setThana(e.target.value)} /><br /><br />\r\n            <input type=\"text\" value={postal} placeholder=\"postal\" onChange={(e) => setPostal(e.target.value)} /><br /><br />\r\n            <input type=\"text\" value={road} placeholder=\"road\" onChange={(e) => setRoad(e.target.value)} /><br /><br />\r\n            {/* <PaypalExpressBtn env={env} client={client} currency={currency} total={total} onError={onError} onSuccess={onSuccess} onCancel={onCancel} /> */}\r\n            <button onClick={setOrder}>paypal</button>\r\n          </div>\r\n        </>\r\n      :\r\n      <>\r\n      {\r\n        !cart.length && !checkout ? <p>cart is empty</p> :\r\n          product.map((item, index) => {\r\n            return (\r\n              <div key={index} id=\"cart\">\r\n                <div className=\"img\">\r\n                  <img src={item.Images[0]} alt=\"pic\" />\r\n                </div>\r\n                <div className=\"productName\">\r\n                  <h2>{item.title}</h2>\r\n                  <p>{item.description}</p>\r\n                </div>\r\n                <div className=\"buttons-area\">\r\n                  <div className=\"taka\">\r\n                    <span>{item.price * item.item.quantity}</span>\r\n                  </div>\r\n                  <div className=\"quantity\">\r\n                    <button onClick={() => addToCart(item._id, \"minus\")}>-</button>\r\n                    <span>{item.item.quantity}</span>\r\n                    <button onClick={() => addToCart(item._id, \"add\")}>+</button>\r\n                  </div>\r\n                  <div className=\"delete\">\r\n                    <button onClick={() => deleteCart(item._id)}>delete</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )\r\n          })\r\n      }\r\n      \r\n      <button onClick={clearCart}>clear cart</button>\r\n      <span>total:{totalPrice}</span><br /><br />\r\n      <span>vat:{totalVat}</span><br /><br />\r\n      <span>total amount:{totalPrice + totalVat}</span>\r\n      <br /><br /><br /><br /><br />\r\n      <button onClick={()=>setCheckout(true)}>checkout</button>\r\n      </>\r\n    }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartPage;","E:\\projects\\web-dev\\client\\src\\Component\\User\\Pages\\OrderPage.js",["188"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst OrderPage = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [orderDetailsProduct, setOrderDetailsProduct] = useState([]);\r\n  const [details, setDetails] = useState(false);\r\n  const getOrder = async () => {\r\n    await axios.get(\"http://localhost:7000/getOrder\",\r\n      {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Cotent-Type\": \"application/json\",\r\n          \"auth\": localStorage.getItem('auth')\r\n        }\r\n      }\r\n    )\r\n      .then(result => {\r\n        console.log(result, 'iryweiruyewiury');\r\n\r\n        setOrders(result.data.myOrder)\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  }\r\n  const detailsShow = (id) => {\r\n    orders.filter(item => {\r\n      if (item._id === id) {\r\n        setOrderDetailsProduct(item.products)\r\n      }\r\n    })\r\n    setDetails(true)\r\n  }\r\n  const history = useHistory();\r\n  const printPage =()=>{\r\n    history.push('/invoicePage')\r\n  }\r\n  useEffect(() => {\r\n    getOrder()\r\n  }, [])\r\n  console.log(orders);\r\n  console.log(orderDetailsProduct);\r\n  return (\r\n    <>\r\n      {\r\n        details\r\n          ?\r\n          <>\r\n            <div>\r\n              <p>My Orders / Tracking</p>\r\n              <hr />\r\n              <div>Order Id: </div>\r\n              <div style={{ 'display': 'flex', 'justifyContent': 'space-around', 'alignItem': 'center' }}>\r\n                <div style={{ 'padding': '10px' }}>\r\n                  <h2>Estimated Delivery Time</h2>\r\n                  <p>date </p>\r\n                  <p>time</p>\r\n                </div>\r\n                <div style={{ 'textAlign': 'center' }}>\r\n                  <h2>Shipping By: </h2>\r\n                  <p>shipping by | mobile number</p>\r\n                </div>\r\n                <div style={{ 'textAlign': 'center' }}>\r\n                  <p>Status: </p>\r\n                  <button>pending</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <p>set order status by admin</p>\r\n            </div>\r\n            <div style={{ 'display': 'flex', 'justifyContent': 'space-around', 'alignItem': 'center' }}>\r\n              {\r\n                orderDetailsProduct.map((items, index) => {\r\n                  return (\r\n                    <div style={{ border: '1px solid #3333', padding: '10px' }}>\r\n                      <p>{items.title}</p>\r\n                      <p>{items.price}</p>\r\n                    </div>\r\n                  )\r\n                })\r\n              }\r\n            </div>\r\n          </>\r\n          :\r\n          <>\r\n            <div style={{ 'display': 'grid', 'gridTemplateRows': '1fr 1fr' }}>\r\n              <div className=\"item1\" style={{ 'display': 'grid', 'gridTemplateColumns': '1fr 2fr 1fr 2fr 1fr 1fr' }}>\r\n                <p>S No</p>\r\n                <p>order id</p>\r\n                <p>status</p>\r\n                <p>statusDate / Time</p>\r\n                <p>invoice</p>\r\n                <p>order details</p>\r\n              </div>\r\n              {\r\n                orders.map((item, index) => {\r\n                  return (\r\n                    <div className=\"item2\" style={{ 'display': 'grid', 'gridTemplateColumns': '1fr 2fr 1fr 2fr 1fr 1fr' }}>\r\n                      <p>{index + 1}</p>\r\n                      <p>{item.orderid}</p>\r\n                      <p>{item.orderstatus}</p>\r\n                      <p><Moment >{item.createdAt}</Moment></p>\r\n                      <button onClick={printPage}>print/save</button>\r\n                      <button onClick={() => detailsShow(item._id)}>click</button>\r\n                    </div>\r\n                  )\r\n                })\r\n              }\r\n            </div>\r\n          </>\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderPage;","E:\\projects\\web-dev\\client\\src\\Component\\Admin\\Page\\UserManage.js",[],"E:\\projects\\web-dev\\client\\src\\Component\\Admin\\Page\\OrderManage.js",[],"E:\\projects\\web-dev\\client\\src\\Component\\Admin\\Page\\ProductManage.js",[],"E:\\projects\\web-dev\\client\\src\\Component\\User\\TopHeading.js",[],"E:\\projects\\web-dev\\client\\src\\Component\\User\\ProductShow.js",["189","190","191","192","193","194"],"import React, { Component, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Product from './Product';\r\nimport './productShow.css';\r\nimport man1 from './img/man1.jpg';\r\nimport axios from 'axios';\r\nimport URL from './Url';\r\nimport { set } from 'mongoose';\r\nconst ProductShow = ({ addToCart, addToWishlist }) => {\r\n    const [products, setProducts] = useState([]);\r\n    const [psize, setpSize] = useState();\r\n    const [skip, setSkip] = useState(0);\r\n    const [limit, setLimit] = useState(8);\r\n    const [loadMores, setLoadMores] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const getAllProduct = async (variables) => {\r\n        setLoadMores(true)\r\n        await axios.post(`${URL}/get-products`,\r\n            { variables }, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            }\r\n        })\r\n            .then(data => {\r\n                if (data.data.success && loadMores) {\r\n                    console.log('loadmore true')\r\n                    console.log(data.data.postSize);\r\n                    const update = products.concat(data.data.product)\r\n                    setProducts(update)\r\n                    setpSize(data.data.postSize)\r\n                    setLoadMores(false)\r\n                }\r\n                else {\r\n                    setProducts(data.data.product)\r\n                    setpSize(data.data.postSize)\r\n                    console.log(data.data.product);\r\n                    setLoadMores(false)\r\n                }\r\n                setLoading(false)\r\n            })\r\n    }\r\n    useEffect(() => {\r\n        const variables = { skip, limit }\r\n        getAllProduct(variables)\r\n    }, [])\r\n    useEffect(() => {\r\n        const variables = { skip, limit }\r\n        getAllProduct(variables)\r\n    }, [skip])\r\n    const loadMore = () => {\r\n        setLoadMores(true)\r\n        setSkip(skip + 8)\r\n        setLimit(8)\r\n    }\r\n    return (\r\n        <div className=\"product-container\">\r\n            <h2>Featured Product</h2>\r\n            <div className=\"product-wrp\">\r\n                {loading ? <p>loading....</p> :\r\n                <>\r\n                    {\r\n                        products.map((item, index) => {\r\n                            return (\r\n                                <div key={index} className=\"product-show\" style={{ width: '250px', textAlign: 'center', border: '1px solid #3333', padding: '10px' }}>\r\n                                    <div className=\"image\" style={{ height: '200px' }}>\r\n                                        <Link to={`/productDetails-Page/${item._id}`}>\r\n                                            <img src={`${URL}/uploads/${item.Images[0]}`} alt=\"pic\" style={{ width: '100%', height: '100%' }} />\r\n                                        </Link>\r\n                                    </div>\r\n                                    <h3>{item.title}</h3>\r\n                                    <div className=\"show-addCart\">\r\n                                        <button type=\"button\" className=\"btn\" onClick={() => addToCart(item._id, \"add\")} style={{ border: '1px solid #333', background: '#dddd', color: '#222', margin: '7px' }}>Add to cart</button>\r\n                                        <button type=\"button\" onClick={() => addToWishlist(item._id)} style={{ border: '1px solid #333', background: '#dddd', color: '#222', margin: '7px' }}>add to favourite</button>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n</>\r\n\r\n                }\r\n            </div>\r\n            {\r\n                psize >= 8 && (\r\n                    <div className=\"load-more\">\r\n                        <button onClick={() => loadMore()}>Load More And</button>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ProductShow;\r\n","E:\\projects\\web-dev\\client\\src\\Component\\User\\ShowCase.js",["195","196"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport MainSlider from './MainSlider';\r\nimport URL from './Url';\r\nimport './user.css'\r\nconst ShowCase = () => {\r\n    const [box, setBox] = useState(false)\r\n    const [menus, setMenus] = useState([])\r\n    const priceBox = () => {\r\n\r\n    }\r\n    const getmenus = async () => {\r\n        await axios.get(`${URL}/getmenus`)\r\n        .then((data) => {\r\n            setMenus(data.data)\r\n        })\r\n        .catch(error=>{\r\n            console.log(error);\r\n        })\r\n    };\r\n    useEffect(() => {\r\n        getmenus()\r\n    }, [])\r\n    console.log(menus);\r\n\r\n    return (\r\n        <div id=\"showCase\">\r\n            <div className=\"showCase-wrapper\">\r\n                <div className=\"showCase-item1\">\r\n                    <div className=\"box\">\r\n                        <div className=\"sub-box\">\r\n                            <button type=\"button\" className=\"price-btn\" onClick={() => setBox(!box)}>Price Filter</button>\r\n                            <input type=\"search\" name=\"search\" placeholder=\"Enter search item\" className=\"search-inp\" />\r\n                        </div>\r\n                        {\r\n                            box ?\r\n                                <div className=\"dropBox\">\r\n                                    <div>\r\n                                        <input type=\"checkbox\" name=\"\" id=\"\" />\r\n                                        <label>0-50</label>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"checkbox\" name=\"\" id=\"\" />\r\n                                        <label>0-50</label>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"checkbox\" name=\"\" id=\"\" />\r\n                                        <label>0-50</label>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"checkbox\" name=\"\" id=\"\" />\r\n                                        <label>0-50</label>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input type=\"checkbox\" name=\"\" id=\"\" />\r\n                                        <label>0-50</label>\r\n                                    </div>\r\n                                </div>\r\n                                : null\r\n                        }\r\n                    </div>\r\n                    <div className=\"top-cat\">\r\n                        <h2>Top Categories</h2>\r\n                        <div className=\"categories-item\">\r\n                            <ul>\r\n                                {\r\n                                    menus.map((item, index) => {\r\n                                        if (item.topCategory) {\r\n                                            return (\r\n                                                <li key={index}>{item.CategoryName}</li>\r\n                                            )\r\n                                        }\r\n                                    })\r\n                                }\r\n                                {/* <li>Lorem ipsum dolor sit amet.</li>\r\n                                <li>Lorem ipsum dolor sit amet.</li>\r\n                                <li>Lorem ipsum dolor sit amet.</li> */}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"showCase-item2\">\r\n                    <MainSlider></MainSlider>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ShowCase;","E:\\projects\\web-dev\\client\\src\\Component\\Admin\\Layout.js",[],"E:\\projects\\web-dev\\client\\src\\Component\\User\\Pages\\InvoiceLayout.js",[],"E:\\projects\\web-dev\\client\\src\\Component\\User\\Product.js",["197","198"],"import React from 'react';\r\nimport './productShow.css'\r\nimport {Link} from \"react-router-dom\";\r\nimport man1 from './img/man1.jpg'\r\nconst Product = () => {\r\n    \r\n    return (\r\n        <div id=\"product\">\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Product;","E:\\projects\\web-dev\\client\\src\\Component\\User\\MainSlider.js",[],{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","severity":1,"message":"204","line":2,"column":33,"nodeType":"205","messageId":"206","endLine":2,"endColumn":39},{"ruleId":"207","severity":1,"message":"208","line":98,"column":13,"nodeType":"209","endLine":98,"endColumn":52},{"ruleId":"203","severity":1,"message":"204","line":3,"column":33,"nodeType":"205","messageId":"206","endLine":3,"endColumn":39},{"ruleId":"203","severity":1,"message":"210","line":3,"column":48,"nodeType":"205","messageId":"206","endLine":3,"endColumn":52},{"ruleId":"203","severity":1,"message":"211","line":11,"column":8,"nodeType":"205","messageId":"206","endLine":11,"endColumn":14},{"ruleId":"203","severity":1,"message":"204","line":3,"column":33,"nodeType":"205","messageId":"206","endLine":3,"endColumn":39},{"ruleId":"203","severity":1,"message":"212","line":3,"column":8,"nodeType":"205","messageId":"206","endLine":3,"endColumn":26},{"ruleId":"203","severity":1,"message":"213","line":11,"column":12,"nodeType":"205","messageId":"206","endLine":11,"endColumn":19},{"ruleId":"214","severity":1,"message":"215","line":31,"column":8,"nodeType":"216","endLine":31,"endColumn":10,"suggestions":"217"},{"ruleId":"218","severity":1,"message":"219","line":37,"column":35,"nodeType":"220","messageId":"221","endLine":37,"endColumn":37},{"ruleId":"222","severity":1,"message":"223","line":41,"column":33,"nodeType":"209","endLine":41,"endColumn":91},{"ruleId":"224","severity":1,"message":"225","line":35,"column":39,"nodeType":"226","messageId":"227","endLine":35,"endColumn":41},{"ruleId":"224","severity":1,"message":"225","line":44,"column":39,"nodeType":"226","messageId":"227","endLine":44,"endColumn":41},{"ruleId":"224","severity":1,"message":"225","line":53,"column":39,"nodeType":"226","messageId":"227","endLine":53,"endColumn":41},{"ruleId":"203","severity":1,"message":"228","line":4,"column":8,"nodeType":"205","messageId":"206","endLine":4,"endColumn":16},{"ruleId":"203","severity":1,"message":"229","line":6,"column":15,"nodeType":"205","messageId":"206","endLine":6,"endColumn":18},{"ruleId":"224","severity":1,"message":"230","line":74,"column":30,"nodeType":"226","messageId":"231","endLine":74,"endColumn":32},{"ruleId":"224","severity":1,"message":"225","line":375,"column":51,"nodeType":"226","messageId":"227","endLine":375,"endColumn":53},{"ruleId":"218","severity":1,"message":"219","line":376,"column":31,"nodeType":"220","messageId":"221","endLine":376,"endColumn":33},{"ruleId":"224","severity":1,"message":"225","line":403,"column":51,"nodeType":"226","messageId":"227","endLine":403,"endColumn":53},{"ruleId":"218","severity":1,"message":"219","line":404,"column":31,"nodeType":"220","messageId":"221","endLine":404,"endColumn":33},{"ruleId":"224","severity":1,"message":"225","line":428,"column":45,"nodeType":"226","messageId":"227","endLine":428,"endColumn":47},{"ruleId":"224","severity":1,"message":"225","line":474,"column":45,"nodeType":"226","messageId":"227","endLine":474,"endColumn":47},{"ruleId":"224","severity":1,"message":"225","line":522,"column":53,"nodeType":"226","messageId":"227","endLine":522,"endColumn":55},{"ruleId":"224","severity":1,"message":"225","line":532,"column":60,"nodeType":"226","messageId":"227","endLine":532,"endColumn":62},{"ruleId":"203","severity":1,"message":"232","line":5,"column":10,"nodeType":"205","messageId":"206","endLine":5,"endColumn":14},{"ruleId":"203","severity":1,"message":"233","line":5,"column":17,"nodeType":"205","messageId":"206","endLine":5,"endColumn":24},{"ruleId":"203","severity":1,"message":"234","line":12,"column":20,"nodeType":"205","messageId":"206","endLine":12,"endColumn":30},{"ruleId":"203","severity":1,"message":"235","line":13,"column":22,"nodeType":"205","messageId":"206","endLine":13,"endColumn":34},{"ruleId":"203","severity":1,"message":"236","line":14,"column":21,"nodeType":"205","messageId":"206","endLine":14,"endColumn":32},{"ruleId":"203","severity":1,"message":"237","line":15,"column":18,"nodeType":"205","messageId":"206","endLine":15,"endColumn":26},{"ruleId":"203","severity":1,"message":"238","line":16,"column":27,"nodeType":"205","messageId":"206","endLine":16,"endColumn":44},{"ruleId":"203","severity":1,"message":"239","line":17,"column":24,"nodeType":"205","messageId":"206","endLine":17,"endColumn":38},{"ruleId":"203","severity":1,"message":"240","line":18,"column":10,"nodeType":"205","messageId":"206","endLine":18,"endColumn":23},{"ruleId":"203","severity":1,"message":"241","line":18,"column":26,"nodeType":"205","messageId":"206","endLine":18,"endColumn":42},{"ruleId":"203","severity":1,"message":"210","line":3,"column":10,"nodeType":"205","messageId":"206","endLine":3,"endColumn":14},{"ruleId":"203","severity":1,"message":"242","line":7,"column":19,"nodeType":"205","messageId":"206","endLine":7,"endColumn":29},{"ruleId":"203","severity":1,"message":"243","line":22,"column":10,"nodeType":"205","messageId":"206","endLine":22,"endColumn":17},{"ruleId":"203","severity":1,"message":"234","line":22,"column":19,"nodeType":"205","messageId":"206","endLine":22,"endColumn":29},{"ruleId":"203","severity":1,"message":"244","line":23,"column":10,"nodeType":"205","messageId":"206","endLine":23,"endColumn":19},{"ruleId":"203","severity":1,"message":"235","line":23,"column":21,"nodeType":"205","messageId":"206","endLine":23,"endColumn":33},{"ruleId":"203","severity":1,"message":"245","line":24,"column":10,"nodeType":"205","messageId":"206","endLine":24,"endColumn":15},{"ruleId":"203","severity":1,"message":"237","line":24,"column":17,"nodeType":"205","messageId":"206","endLine":24,"endColumn":25},{"ruleId":"203","severity":1,"message":"246","line":25,"column":10,"nodeType":"205","messageId":"206","endLine":25,"endColumn":24},{"ruleId":"203","severity":1,"message":"238","line":25,"column":26,"nodeType":"205","messageId":"206","endLine":25,"endColumn":43},{"ruleId":"203","severity":1,"message":"247","line":26,"column":10,"nodeType":"205","messageId":"206","endLine":26,"endColumn":21},{"ruleId":"203","severity":1,"message":"239","line":26,"column":23,"nodeType":"205","messageId":"206","endLine":26,"endColumn":37},{"ruleId":"203","severity":1,"message":"240","line":27,"column":10,"nodeType":"205","messageId":"206","endLine":27,"endColumn":23},{"ruleId":"203","severity":1,"message":"241","line":27,"column":25,"nodeType":"205","messageId":"206","endLine":27,"endColumn":41},{"ruleId":"224","severity":1,"message":"230","line":70,"column":19,"nodeType":"226","messageId":"231","endLine":70,"endColumn":21},{"ruleId":"224","severity":1,"message":"230","line":71,"column":23,"nodeType":"226","messageId":"231","endLine":71,"endColumn":25},{"ruleId":"214","severity":1,"message":"248","line":89,"column":6,"nodeType":"216","endLine":89,"endColumn":21,"suggestions":"249"},{"ruleId":"224","severity":1,"message":"250","line":30,"column":24,"nodeType":"226","messageId":"231","endLine":30,"endColumn":26},{"ruleId":"203","severity":1,"message":"251","line":1,"column":17,"nodeType":"205","messageId":"206","endLine":1,"endColumn":26},{"ruleId":"203","severity":1,"message":"252","line":3,"column":8,"nodeType":"205","messageId":"206","endLine":3,"endColumn":15},{"ruleId":"203","severity":1,"message":"253","line":5,"column":8,"nodeType":"205","messageId":"206","endLine":5,"endColumn":12},{"ruleId":"203","severity":1,"message":"254","line":8,"column":10,"nodeType":"205","messageId":"206","endLine":8,"endColumn":13},{"ruleId":"214","severity":1,"message":"255","line":47,"column":8,"nodeType":"216","endLine":47,"endColumn":10,"suggestions":"256"},{"ruleId":"214","severity":1,"message":"257","line":51,"column":8,"nodeType":"216","endLine":51,"endColumn":14,"suggestions":"258"},{"ruleId":"203","severity":1,"message":"259","line":9,"column":11,"nodeType":"205","messageId":"206","endLine":9,"endColumn":19},{"ruleId":"224","severity":1,"message":"225","line":67,"column":61,"nodeType":"226","messageId":"227","endLine":67,"endColumn":63},{"ruleId":"203","severity":1,"message":"210","line":3,"column":9,"nodeType":"205","messageId":"206","endLine":3,"endColumn":13},{"ruleId":"203","severity":1,"message":"253","line":4,"column":8,"nodeType":"205","messageId":"206","endLine":4,"endColumn":12},"no-native-reassign",["260"],"no-negated-in-lhs",["261"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Link' is defined but never used.","'Header' is defined but never used.","'ProductDetailsPage' is defined but never used.","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getDetails'. Either include it or remove the dependency array.","ArrayExpression",["262"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Dropzone' is defined but never used.","'sub' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'list' is assigned a value but never used.","'setList' is assigned a value but never used.","'setOrderid' is assigned a value but never used.","'setPaymentid' is assigned a value but never used.","'setProducts' is assigned a value but never used.","'setTotal' is assigned a value but never used.","'setDateofpurcashe' is assigned a value but never used.","'setOrderstatus' is assigned a value but never used.","'paymentmethod' is assigned a value but never used.","'setPaymentmethod' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'orderid' is assigned a value but never used.","'paymentid' is assigned a value but never used.","'total' is assigned a value but never used.","'dateofpurcashe' is assigned a value but never used.","'orderstatus' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'makePd'. Either include it or remove the dependency array.",["263"],"Array.prototype.filter() expects a return value from arrow function.","'Component' is defined but never used.","'Product' is defined but never used.","'man1' is defined but never used.","'set' is defined but never used.","React Hook useEffect has missing dependencies: 'getAllProduct', 'limit', and 'skip'. Either include them or remove the dependency array.",["264"],"React Hook useEffect has missing dependencies: 'getAllProduct' and 'limit'. Either include them or remove the dependency array.",["265"],"'priceBox' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"270","fix":"272"},"Update the dependencies array to be: [getDetails]",{"range":"273","text":"274"},"Update the dependencies array to be: [cart, loading, makePd]",{"range":"275","text":"276"},"Update the dependencies array to be: [getAllProduct, limit, skip]",{"range":"277","text":"278"},{"range":"279","text":"278"},[1021,1023],"[getDetails]",[2415,2430],"[cart, loading, makePd]",[1759,1761],"[getAllProduct, limit, skip]",[1871,1877]]